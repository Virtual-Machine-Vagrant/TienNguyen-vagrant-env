<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeSniffer_Tokenizers_Comment" namespace="" name="PHP_CodeSniffer_Tokenizers_Comment" abstract="false" final="false" start="26" end="284">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Tokenizers" file="Comment.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Tokenizers/Comment.php" size="9571" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="442b85cb225a7ad39ed3c488571ed86e84d64a3b" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Tokenizers/Comment.php"/>
  <docblock>
    <description compact="Tokenizes doc block comments."/>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2006-2012 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <method name="tokenizeString" start="42" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates an array of tokens when given some PHP code.">Starts by using token_get_all() but does a lot of extra processing
to insert information about the context of the token.</description>
      <param description="The string to tokenize." type="string" variable="$string"/>
      <param description="The EOL character to use for splitting strings." type="string" variable="$eolChar"/>
      <param description="The position of the first token in the file." type="int" variable="$stackPtr"/>
      <return type="array"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="eolChar" byreference="false" type="{unknown}"/>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Doc block comments start with /*, but typically contain an" line="51"/>
      <comment xmlns="http://xml.phpdox.net/src" value="extra star when they are used for function and class comments." line="52"/>
      <comment value="Strip off the close tag so it doesn't interfere with any" line="75"/>
      <comment xmlns="http://xml.phpdox.net/src" value="of our comment line processing. The token will be added to the" line="76"/>
      <comment xmlns="http://xml.phpdox.net/src" value="stack just before we return it." line="77"/>
      <comment value="Process each line of the comment." line="90"/>
      <comment value="end foreach" line="157"/>
    </inline>
  </method>
  <method name="_processLine" start="185" end="246" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Process a single line of a comment."/>
      <param description="The comment string being tokenized." type="string" variable="$string"/>
      <param description="The EOL character to use for splitting strings." type="string" variable="$eolChar"/>
      <param description="The position in the string to start processing." type="int" variable="$start"/>
      <param description="The position in the string to end processing." type="int" variable="$end"/>
      <return type="array"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="eolChar" byreference="false" type="{unknown}"/>
    <parameter name="start" byreference="false" type="{unknown}"/>
    <parameter name="end" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Collect content padding." line="189"/>
      <comment value="end if" line="220"/>
      <comment value="Process the rest of the line." line="222"/>
    </inline>
  </method>
  <method name="_collectWhitespace" start="258" end="281" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Collect consecutive whitespace into a single token."/>
      <param description="The comment string being tokenized." type="string" variable="$string"/>
      <param description="The position in the string to start processing." type="int" variable="$start"/>
      <param description="The position in the string to end processing." type="int" variable="$end"/>
      <return type="object">
        <type full="array|null" namespace="" name="array|null"/>
      </return>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="start" byreference="false" type="{unknown}"/>
    <parameter name="end" byreference="false" type="{unknown}"/>
  </method>
</class>
