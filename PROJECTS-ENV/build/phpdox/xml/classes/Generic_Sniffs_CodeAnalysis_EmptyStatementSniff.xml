<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Generic_Sniffs_CodeAnalysis_EmptyStatementSniff" namespace="" name="Generic_Sniffs_CodeAnalysis_EmptyStatementSniff" abstract="false" final="false" start="41" end="106">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis" file="EmptyStatementSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis/EmptyStatementSniff.php" size="2923" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="f74951677947998c16c1a350835c81e125f15662" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis/EmptyStatementSniff.php"/>
  <docblock>
    <description compact="This sniff class detected empty statement.">This sniff implements the common algorithm for empty statement body detection.
A body is considered as empty if it is completely empty or it only contains
whitespace characters and/or comments.

&lt;code&gt;
stmt {
  // foo
}
stmt (conditions) {
  // foo
}
&lt;/code&gt;</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Manuel Pichler &lt;mapi@manuel-pichler.de&gt;"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2007-2014 Manuel Pichler. All rights reserved."/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <method name="register" start="50" end="65" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers the tokens that this sniff wants to listen for."/>
      <return type="array" of="int"/>
    </docblock>
  </method>
  <method name="process" start="77" end="103" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Skip statements without a body." line="82"/>
      <comment value="Get token identifier." line="98"/>
    </inline>
  </method>
</class>
