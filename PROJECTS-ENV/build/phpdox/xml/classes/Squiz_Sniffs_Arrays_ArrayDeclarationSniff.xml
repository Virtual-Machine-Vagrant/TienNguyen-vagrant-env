<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Squiz_Sniffs_Arrays_ArrayDeclarationSniff" namespace="" name="Squiz_Sniffs_Arrays_ArrayDeclarationSniff" abstract="false" final="false" start="28" end="888">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Arrays" file="ArrayDeclarationSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Arrays/ArrayDeclarationSniff.php" size="38297" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="a52704f3b371e6203da56ee51790c83c51a8e55b" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Arrays/ArrayDeclarationSniff.php"/>
  <docblock>
    <description compact="A test to ensure that arrays conform to the array coding standard."/>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <author value="Marc McIntyre &lt;mmcintyre@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <method name="register" start="37" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="56" end="136" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this sniff, when one of its tokens is encountered."/>
      <param description="The current file being checked." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token in" type="int" variable="$stackPtr">the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="end if" line="105"/>
      <comment value="Check for empty arrays." line="107"/>
    </inline>
  </method>
  <method name="processSingleLineArray" start="150" end="300" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes a single-line array definition."/>
      <param description="The current file being checked." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <param description="The token that starts the array definition." type="int" variable="$arrayStart"/>
      <param description="The token that ends the array definition." type="int" variable="$arrayEnd"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <parameter name="arrayStart" byreference="false" type="{unknown}"/>
    <parameter name="arrayEnd" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Check if there are multiple values. If so, then it has to be multiple lines" line="154"/>
      <comment value="unless it is contained inside a function call or condition." line="155"/>
      <comment value="end for" line="181"/>
      <comment value="Now check each of the double arrows (if any)." line="183"/>
      <comment value="end while" line="235"/>
      <comment value="end if" line="298"/>
    </inline>
  </method>
  <method name="processMultiLineArray" start="314" end="885" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes a multi-line array definition."/>
      <param description="The current file being checked." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <param description="The token that starts the array definition." type="int" variable="$arrayStart"/>
      <param description="The token that ends the array definition." type="int" variable="$arrayEnd"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <parameter name="arrayStart" byreference="false" type="{unknown}"/>
    <parameter name="arrayEnd" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Check the closing bracket is on a new line." line="319"/>
      <comment value="end if" line="345"/>
      <comment value="Find all the double arrows that reside in this scope." line="359"/>
      <comment value="end for" line="534"/>
      <comment value="Check for mutli-line arrays that should be single-line." line="536"/>
      <comment value="end if" line="579"/>
      <comment value="This section checks for arrays that don't specify keys." line="581"/>
      <comment xmlns="http://xml.phpdox.net/src" value="Arrays such as:" line="582"/>
      <comment xmlns="http://xml.phpdox.net/src" value="array(" line="583"/>
      <comment xmlns="http://xml.phpdox.net/src" value="'aaa'," line="584"/>
      <comment xmlns="http://xml.phpdox.net/src" value="'bbb'," line="585"/>
      <comment xmlns="http://xml.phpdox.net/src" value="'d'," line="586"/>
      <comment xmlns="http://xml.phpdox.net/src" value=");" line="587"/>
      <comment value="end if" line="658"/>
      <comment value="Below the actual indentation of the array is checked." line="660"/>
      <comment xmlns="http://xml.phpdox.net/src" value="Errors will be thrown when a key is not aligned, when" line="661"/>
      <comment xmlns="http://xml.phpdox.net/src" value="a double arrow is not aligned, and when a value is not" line="662"/>
      <comment xmlns="http://xml.phpdox.net/src" value="aligned correctly." line="663"/>
      <comment xmlns="http://xml.phpdox.net/src" value="If an error is found in one of the above areas, then errors" line="664"/>
      <comment xmlns="http://xml.phpdox.net/src" value="are not reported for the rest of the line to avoid reporting" line="665"/>
      <comment xmlns="http://xml.phpdox.net/src" value="spaces and columns incorrectly. Often fixing the first" line="666"/>
      <comment xmlns="http://xml.phpdox.net/src" value="problem will fix the other 2 anyway." line="667"/>
      <comment xmlns="http://xml.phpdox.net/src" value="For example:" line="668"/>
      <comment xmlns="http://xml.phpdox.net/src" value="$a = array(" line="669"/>
      <comment xmlns="http://xml.phpdox.net/src" value="'index'  =&gt; '2'," line="670"/>
      <comment xmlns="http://xml.phpdox.net/src" value=");" line="671"/>
      <comment xmlns="http://xml.phpdox.net/src" value="or" line="672"/>
      <comment xmlns="http://xml.phpdox.net/src" value="$a = [" line="673"/>
      <comment xmlns="http://xml.phpdox.net/src" value="'index'  =&gt; '2'," line="674"/>
      <comment xmlns="http://xml.phpdox.net/src" value="];" line="675"/>
      <comment xmlns="http://xml.phpdox.net/src" value="In this array, the double arrow is indented too far, but this" line="676"/>
      <comment xmlns="http://xml.phpdox.net/src" value="will also cause an error in the value's alignment. If the arrow were" line="677"/>
      <comment xmlns="http://xml.phpdox.net/src" value="to be moved back one space however, then both errors would be fixed." line="678"/>
      <comment value="end foreach" line="883"/>
    </inline>
  </method>
</class>
