<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\EventDispatcher\GenericEvent" namespace="Symfony\Component\EventDispatcher" name="GenericEvent" abstract="false" final="false" start="21" end="186">
  <file path="/home/web/example/src/freegame_developer/vendor/symfony/event-dispatcher" file="GenericEvent.php" realpath="/home/web/example/src/freegame_developer/vendor/symfony/event-dispatcher/GenericEvent.php" size="3877" time="2016-10-13T01:43:15+00:00" unixtime="1476322995" sha1="a289d4ffbdc6b17ef4b3c9966d0ad89a5007c89b" relative="freegame_developer/vendor/symfony/event-dispatcher/GenericEvent.php"/>
  <docblock>
    <description compact="Event encapsulation class.">Encapsulates events thus decoupling the observer from the subject they encapsulate.</description>
    <author value="Drak &lt;drak@zikula.org&gt;"/>
  </docblock>
  <extends full="Symfony\Component\EventDispatcher\Event" namespace="Symfony\Component\EventDispatcher" name="Event"/>
  <implements full="ArrayAccess" namespace="" name="ArrayAccess"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <member name="subject" visibility="protected" static="false" line="28">
    <docblock>
      <description compact="Event subject."/>
      <var description="usually object or callable" type="mixed"/>
    </docblock>
  </member>
  <member name="arguments" visibility="protected" static="false" line="35">
    <docblock>
      <description compact="Array of arguments."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="43" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Encapsulate an event with $subject and $args."/>
      <param description="The subject of the event, usually an object" type="mixed" variable="$subject"/>
      <param description="Arguments to store in the event" type="array" variable="$arguments"/>
    </docblock>
    <parameter name="subject" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="arguments" byreference="false" type="array" default=""/>
  </constructor>
  <method name="getSubject" start="54" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Getter for subject property."/>
      <return description="$subject The observer subject" type="mixed"/>
    </docblock>
  </method>
  <method name="getArgument" start="68" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get argument by key."/>
      <param description="Key" type="string" variable="$key"/>
      <return description="Contents of array key" type="mixed"/>
      <throws description="If key is not found." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="setArgument" start="85" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add argument to event."/>
      <param description="Argument name" type="string" variable="$key"/>
      <param description="Value" type="mixed" variable="$value"/>
      <return type="object">
        <type full="Symfony\Component\EventDispatcher\GenericEvent" namespace="Symfony\Component\EventDispatcher" name="GenericEvent"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getArguments" start="97" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Getter for all arguments."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setArguments" start="109" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set args property."/>
      <param description="Arguments" type="array" variable="$args"/>
      <return type="object">
        <type full="Symfony\Component\EventDispatcher\GenericEvent" namespace="Symfony\Component\EventDispatcher" name="GenericEvent"/>
      </return>
    </docblock>
    <parameter name="args" byreference="false" type="array" default=""/>
  </method>
  <method name="hasArgument" start="123" end="126" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Has argument."/>
      <param description="Key of arguments array" type="string" variable="$key"/>
      <return type="object">
        <type full="Symfony\Component\EventDispatcher\bool" namespace="Symfony\Component\EventDispatcher" name="bool"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetGet" start="137" end="140" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="ArrayAccess for argument getter."/>
      <param description="Array key" type="string" variable="$key"/>
      <return type="mixed"/>
      <throws description="If key does not exist in $this-&gt;args." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetSet" start="148" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="ArrayAccess for argument setter."/>
      <param description="Array key to set" type="string" variable="$key"/>
      <param description="Value" type="mixed" variable="$value"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetUnset" start="158" end="163" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="ArrayAccess for unset argument."/>
      <param description="Array key" type="string" variable="$key"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetExists" start="172" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="ArrayAccess has argument."/>
      <param description="Array key" type="string" variable="$key"/>
      <return type="object">
        <type full="Symfony\Component\EventDispatcher\bool" namespace="Symfony\Component\EventDispatcher" name="bool"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIterator" start="182" end="185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="IteratorAggregate for iterating over the object like an array."/>
      <return type="object">
        <type full="\ArrayIterator" namespace="" name="ArrayIterator"/>
      </return>
    </docblock>
  </method>
</class>
