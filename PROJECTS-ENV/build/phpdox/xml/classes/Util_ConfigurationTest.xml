<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Util_ConfigurationTest" namespace="" name="Util_ConfigurationTest" abstract="false" final="false" start="14" end="504">
  <file path="/home/web/example/src/freegame_developer/vendor/phpunit/phpunit/tests/Util" file="ConfigurationTest.php" realpath="/home/web/example/src/freegame_developer/vendor/phpunit/phpunit/tests/Util/ConfigurationTest.php" size="18044" time="2016-02-11T14:56:33+00:00" unixtime="1455202593" sha1="d80e7320aefe77f0aa3e951c9c9310c27c5bf012" relative="freegame_developer/vendor/phpunit/phpunit/tests/Util/ConfigurationTest.php"/>
  <docblock>
    <description/>
    <since value="Class available since Release 3.3.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <member name="configuration" visibility="protected" static="false" line="16"/>
  <method name="setUp" start="18" end="23" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testExceptionIsThrownForNotExistingConfigurationFile" start="29" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getInstance"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testShouldReadColorsWhenTrueInConfigurationfile" start="37" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
    </docblock>
  </method>
  <method name="testShouldReadColorsWhenFalseInConfigurationfile" start="49" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
    </docblock>
  </method>
  <method name="testShouldReadColorsWhenEmptyInConfigurationfile" start="61" end="68" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
    </docblock>
  </method>
  <method name="testShouldReadColorsWhenInvalidInConfigurationfile" start="73" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
    </docblock>
  </method>
  <method name="testFilterConfigurationIsReadCorrectly" start="85" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getFilterConfiguration"/>
    </docblock>
  </method>
  <method name="testGroupConfigurationIsReadCorrectly" start="174" end="189" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getGroupConfiguration"/>
    </docblock>
  </method>
  <method name="testListenerConfigurationIsReadCorrectly" start="194" end="240" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getListenerConfiguration"/>
    </docblock>
  </method>
  <method name="testLoggingConfigurationIsReadCorrectly" start="245" end="263" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getLoggingConfiguration"/>
    </docblock>
  </method>
  <method name="testPHPConfigurationIsReadCorrectly" start="268" end="290" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPConfiguration"/>
    </docblock>
  </method>
  <method name="testPHPConfigurationIsHandledCorrectly" start="296" end="313" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <backupglobals value="enabled"/>
      <covers value="PHPUnit_Util_Configuration::handlePHPConfiguration"/>
    </docblock>
  </method>
  <method name="testHandlePHPConfigurationDoesNotOverwrittenExistingEnvArrayVariables" start="320" end="327" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <backupglobals value="enabled"/>
      <see value="https://github.com/sebastianbergmann/phpunit/issues/1181"/>
    </docblock>
  </method>
  <method name="testHandlePHPConfigurationDoesNotOverriteVariablesFromPutEnv" start="334" end="341" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <backupglobals value="enabled"/>
      <see value="https://github.com/sebastianbergmann/phpunit/issues/1181"/>
    </docblock>
  </method>
  <method name="testPHPUnitConfigurationIsReadCorrectly" start="346" end="378" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
    </docblock>
  </method>
  <method name="testSeleniumBrowserConfigurationIsReadCorrectly" start="383" end="398" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getSeleniumBrowserConfiguration"/>
    </docblock>
  </method>
  <method name="testXincludeInConfiguration" start="403" end="413" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Util_Configuration::getInstance"/>
    </docblock>
  </method>
  <method name="testWithEmptyConfigurations" start="425" end="454" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <ticket value="1311"/>
      <covers value="PHPUnit_Util_Configuration::getLoggingConfiguration"/>
      <covers value="PHPUnit_Util_Configuration::getPHPConfiguration"/>
      <covers value="PHPUnit_Util_Configuration::getPHPUnitConfiguration"/>
      <covers value="PHPUnit_Util_Configuration::getTestSuiteConfiguration"/>
      <covers value="PHPUnit_Util_Configuration::getFilterConfiguration"/>
      <uses value="PHPUnit_Util_Configuration::getInstance"/>
    </docblock>
  </method>
  <method name="assertConfigurationEquals" start="462" end="503" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Asserts that the values in $actualConfiguration equal $expectedConfiguration."/>
      <param type="object" variable="$expectedConfiguration">
        <type full="PHPUnit_Util_Configuration" namespace="" name="PHPUnit_Util_Configuration"/>
      </param>
      <param type="object" variable="$actualConfiguration">
        <type full="PHPUnit_Util_Configuration" namespace="" name="PHPUnit_Util_Configuration"/>
      </param>
    </docblock>
    <parameter name="expectedConfiguration" byreference="false" type="object">
      <type full="PHPUnit_Util_Configuration" namespace="" name="PHPUnit_Util_Configuration"/>
    </parameter>
    <parameter name="actualConfiguration" byreference="false" type="object">
      <type full="PHPUnit_Util_Configuration" namespace="" name="PHPUnit_Util_Configuration"/>
    </parameter>
  </method>
</class>
