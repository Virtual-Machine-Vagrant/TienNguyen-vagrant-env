<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Squiz_Sniffs_Classes_SelfMemberReferenceSniff" namespace="" name="Squiz_Sniffs_Classes_SelfMemberReferenceSniff" abstract="false" final="false" start="40" end="188">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Classes" file="SelfMemberReferenceSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Classes/SelfMemberReferenceSniff.php" size="7375" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="f2e2398fed8ebdfe8e664eff9e04b02339e27390" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Classes/SelfMemberReferenceSniff.php"/>
  <docblock>
    <description compact="Tests self member references.">Verifies that :
&lt;ul&gt;
 &lt;li&gt;self:: is used instead of Self::&lt;/li&gt;
 &lt;li&gt;self:: is used for local static member reference&lt;/li&gt;
 &lt;li&gt;self:: is used instead of self ::&lt;/li&gt;
&lt;/ul&gt;</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <author value="Marc McIntyre &lt;mmcintyre@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <extends full="PHP_CodeSniffer_Standards_AbstractScopeSniff" namespace="" name="PHP_CodeSniffer_Standards_AbstractScopeSniff"/>
  <constructor name="__construct" start="47" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a Squiz_Sniffs_Classes_SelfMemberReferenceSniff."/>
    </docblock>
  </constructor>
  <method name="processTokenWithinScope" start="63" end="133" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Processes the function tokens within the class."/>
      <param description="The file where this token was found." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position where the token was found." type="int" variable="$stackPtr"/>
      <param description="The current scope opener token." type="int" variable="$currScope"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <parameter name="currScope" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="end if" line="109"/>
    </inline>
  </method>
  <method name="getDeclarationNameWithNamespace" start="144" end="158" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns the declaration names for classes/interfaces/functions with a namespace."/>
      <param description="Token stack for this file" type="array" variable="$tokens"/>
      <param description="The position where the namespace building will start." type="int" variable="$stackPtr"/>
      <return type="string"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="array"/>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
  <method name="getNamespaceOfScope" start="170" end="185" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns the namespace declaration of a file."/>
      <param description="The file where this token was found." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position where the search for the" type="int" variable="$stackPtr">namespace declaration will start.</param>
      <return type="string"/>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
</class>
