<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Squiz_Sniffs_Commenting_VariableCommentSniff" namespace="" name="Squiz_Sniffs_Commenting_VariableCommentSniff" abstract="false" final="false" start="33" end="169">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Commenting" file="VariableCommentSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Commenting/VariableCommentSniff.php" size="6646" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="3fdc8b766cee0e4c655ab0d7387faf771fd8786e" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Commenting/VariableCommentSniff.php"/>
  <docblock>
    <description compact="Parses and verifies the variable doc comment."/>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <author value="Marc McIntyre &lt;mmcintyre@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <extends full="PHP_CodeSniffer_Standards_AbstractVariableSniff" namespace="" name="PHP_CodeSniffer_Standards_AbstractVariableSniff"/>
  <method name="processMemberVar" start="46" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called to process class member vars."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="end foreach" line="98"/>
      <comment value="The @var tag is the only one we require." line="100"/>
      <comment value="Make sure the tag isn't empty and has the correct padding." line="113"/>
    </inline>
  </method>
  <method name="processVariable" start="146" end="149" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Called to process a normal variable.">Not required for this sniff.</description>
      <param description="The PHP_CodeSniffer file where this token was found." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position where the double quoted" type="int" variable="$stackPtr">string was found.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
  <method name="processVariableInString" start="163" end="166" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Called to process variables found in double quoted strings.">Not required for this sniff.</description>
      <param description="The PHP_CodeSniffer file where this token was found." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position where the double quoted" type="int" variable="$stackPtr">string was found.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
</class>
