<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Jenssegers\Mongodb\Queue\MongoQueue" namespace="Jenssegers\Mongodb\Queue" name="MongoQueue" abstract="false" final="false" start="8" end="131">
  <file path="/home/web/example/src/freegame_developer/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Queue" file="MongoQueue.php" realpath="/home/web/example/src/freegame_developer/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Queue/MongoQueue.php" size="3871" time="2016-10-07T08:39:24+00:00" unixtime="1475829564" sha1="d0384409f23a0cf4d159986fdcd7fbda6d19f357" relative="freegame_developer/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Queue/MongoQueue.php"/>
  <extends full="Illuminate\Queue\DatabaseQueue" namespace="Illuminate\Queue" name="DatabaseQueue"/>
  <method name="pop" start="16" end="29" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pop the next job off of the queue."/>
      <param type="string" variable="$queue"/>
      <return type="object">
        <type full="\Illuminate\Contracts\Queue\Job|null" namespace="\Illuminate\Contracts\Queue" name="Job|null"/>
      </return>
    </docblock>
    <parameter name="queue" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getNextAvailableJobAndReserve" start="46" end="72" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the next available job for the queue and mark it as reserved.">When using multiple daemon queue listeners to process jobs there
is a possibility that multiple processes can end up reading the
same record before one has flagged it as reserved.

This race condition can result in random jobs being run more then
once. To solve this we use findOneAndUpdate to lock the next jobs
record while flagging it as reserved at the same time.</description>
      <param type="object" variable="$queue">
        <type full="Jenssegers\Mongodb\Queue\string|null" namespace="Jenssegers\Mongodb\Queue" name="string|null"/>
      </param>
      <return type="object">
        <type full="\StdClass|null" namespace="" name="StdClass|null"/>
      </return>
    </docblock>
    <parameter name="queue" byreference="false" type="{unknown}"/>
  </method>
  <method name="releaseJobsThatHaveBeenReservedTooLong" start="80" end="102" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Release the jobs that have been reserved for too long."/>
      <param type="string" variable="$queue"/>
      <return type="object">
        <type full="Jenssegers\Mongodb\Queue\void" namespace="Jenssegers\Mongodb\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="queue" byreference="false" type="{unknown}"/>
  </method>
  <method name="releaseJob" start="111" end="118" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Release the given job ID from reservation."/>
      <param type="string" variable="$id"/>
      <param type="int" variable="$attempts"/>
      <return type="object">
        <type full="Jenssegers\Mongodb\Queue\void" namespace="Jenssegers\Mongodb\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="{unknown}"/>
  </method>
  <method name="deleteReserved" start="127" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Delete a reserved job from the queue."/>
      <param type="string" variable="$queue"/>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="Jenssegers\Mongodb\Queue\void" namespace="Jenssegers\Mongodb\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="queue" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
</class>
