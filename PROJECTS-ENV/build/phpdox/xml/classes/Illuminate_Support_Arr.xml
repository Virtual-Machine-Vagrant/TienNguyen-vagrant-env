<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Support\Arr" namespace="Illuminate\Support" name="Arr" abstract="false" final="false" start="7" end="486">
  <file path="/home/web/example/src/freegame_developer/vendor/laravel/framework/src/Illuminate/Support" file="Arr.php" realpath="/home/web/example/src/freegame_developer/vendor/laravel/framework/src/Illuminate/Support/Arr.php" size="11753" time="2016-02-24T15:13:21+00:00" unixtime="1456326801" sha1="211c6666886e90fc725fd03fb439aca3125dab10" relative="freegame_developer/vendor/laravel/framework/src/Illuminate/Support/Arr.php"/>
  <uses full="Illuminate\Support\Traits\Macroable" namespace="Illuminate\Support\Traits" name="Macroable" start="9" end="9"/>
  <method name="add" start="19" end="26" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Add an element to an array using &quot;dot&quot; notation if it doesn't exist."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$value"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="build" start="35" end="46" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Build a new array using a callback."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
    </parameter>
  </method>
  <method name="collapse" start="54" end="67" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Collapse an array of arrays into a single array."/>
      <param type="object" variable="$array">
        <type full="\ArrayAccess|array" namespace="" name="ArrayAccess|array"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="divide" start="75" end="78" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Divide an array into two arrays. One with keys and the other with values."/>
      <param type="array" variable="$array"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="dot" start="87" end="100" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Flatten a multi-dimensional associative array with dots."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$prepend"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="prepend" byreference="false" type="string" default="''"/>
  </method>
  <method name="except" start="109" end="114" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get all of the given array except for a specified array of items."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$keys">
        <type full="Illuminate\Support\array|string" namespace="Illuminate\Support" name="array|string"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="keys" byreference="false" type="{unknown}"/>
  </method>
  <method name="fetch" start="125" end="140" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Fetch a flattened array of a nested array element."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <return type="array"/>
      <deprecated value="since version 5.1. Use pluck instead."/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="first" start="150" end="159" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Return the first element in an array passing a given truth test."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
      </param>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="last" start="169" end="172" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Return the last element in an array passing a given truth test."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
      </param>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="flatten" start="180" end="189" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Flatten a multi-dimensional array into a single level."/>
      <param type="array" variable="$array"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="forget" start="198" end="226" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Remove one or many array items from a given array using &quot;dot&quot; notation."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$keys">
        <type full="Illuminate\Support\array|string" namespace="Illuminate\Support" name="array|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Support\void" namespace="Illuminate\Support" name="void"/>
      </return>
    </docblock>
    <parameter name="array" byreference="true" type="{unknown}"/>
    <parameter name="keys" byreference="false" type="{unknown}"/>
  </method>
  <method name="get" start="236" end="255" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get an item from an array using &quot;dot&quot; notation."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="has" start="264" end="283" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Check if an item exists in an array using &quot;dot&quot; notation."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <return type="object">
        <type full="Illuminate\Support\bool" namespace="Illuminate\Support" name="bool"/>
      </return>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="isAssoc" start="293" end="298" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Determines if an array is associative.">An array is "associative" if it doesn't have sequential numerical keys beginning with zero.</description>
      <param type="array" variable="$array"/>
      <return type="object">
        <type full="Illuminate\Support\bool" namespace="Illuminate\Support" name="bool"/>
      </return>
    </docblock>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="only" start="307" end="310" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get a subset of the items from the given array."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$keys">
        <type full="Illuminate\Support\array|string" namespace="Illuminate\Support" name="array|string"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="keys" byreference="false" type="{unknown}"/>
  </method>
  <method name="pluck" start="320" end="342" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Pluck an array of values from an array."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$value">
        <type full="Illuminate\Support\string|array" namespace="Illuminate\Support" name="string|array"/>
      </param>
      <param type="object" variable="$key">
        <type full="Illuminate\Support\string|array|null" namespace="Illuminate\Support" name="string|array|null"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="explodePluckParameters" start="351" end="358" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Explode the &quot;value&quot; and &quot;key&quot; arguments passed to &quot;pluck&quot;."/>
      <param type="object" variable="$value">
        <type full="Illuminate\Support\string|array" namespace="Illuminate\Support" name="string|array"/>
      </param>
      <param type="object" variable="$key">
        <type full="Illuminate\Support\string|array|null" namespace="Illuminate\Support" name="string|array|null"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="prepend" start="368" end="377" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Push an item onto the beginning of an array."/>
      <param type="array" variable="$array"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$key"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="pull" start="387" end="394" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get a value from the array, and remove it."/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="array" byreference="true" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="set" start="406" end="430" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set an array item to a given value using &quot;dot&quot; notation.">If no key is given to the method, the entire array will be replaced.</description>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$value"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="true" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="sort" start="439" end="442" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sort the array using the given callback."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
    </parameter>
  </method>
  <method name="sortRecursive" start="450" end="465" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Recursively sort an array by keys and values."/>
      <param type="array" variable="$array"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="where" start="474" end="485" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Filter the array using the given callback."/>
      <param type="array" variable="$array"/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Support\callable" namespace="Illuminate\Support" name="callable"/>
    </parameter>
  </method>
</class>
