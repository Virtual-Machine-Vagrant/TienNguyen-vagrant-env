<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\Tests\Session\Storage\Handler\PdoSessionHandlerTest" namespace="Symfony\Component\HttpFoundation\Tests\Session\Storage\Handler" name="PdoSessionHandlerTest" abstract="false" final="false" start="20" end="328">
  <file path="/home/web/example/src/freegame_developer/vendor/symfony/http-foundation/Tests/Session/Storage/Handler" file="PdoSessionHandlerTest.php" realpath="/home/web/example/src/freegame_developer/vendor/symfony/http-foundation/Tests/Session/Storage/Handler/PdoSessionHandlerTest.php" size="12061" time="2016-10-24T14:36:35+00:00" unixtime="1477319795" sha1="5a67a599dc74d1ee2848cd15083bdac3ff35cd86" relative="freegame_developer/vendor/symfony/http-foundation/Tests/Session/Storage/Handler/PdoSessionHandlerTest.php"/>
  <docblock>
    <description/>
    <requires value="extension pdo_sqlite"/>
    <group value="time-sensitive"/>
  </docblock>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <member name="dbFile" visibility="private" static="false" line="22"/>
  <method name="tearDown" start="24" end="31" abstract="false" final="false" static="false" visibility="protected">
    <inline>
      <comment value="make sure the temporary database file is deleted when it has been created (even when a test fails)" line="26"/>
    </inline>
  </method>
  <method name="getPersistentSqliteDsn" start="33" end="38" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="getMemorySqlitePdo" start="40" end="48" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testWrongPdoErrMode" start="53" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testInexistentTable" start="64" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\RuntimeException"/>
    </docblock>
  </method>
  <method name="testCreateTableTwice" start="76" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\RuntimeException"/>
    </docblock>
  </method>
  <method name="testWithLazyDsnConnection" start="82" end="98" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testWithLazySavePathConnection" start="100" end="117" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="Open is called with what ini_set('session.save_path', $dsn) would mean" line="104"/>
    </inline>
  </method>
  <method name="testReadWriteReadWithNullByte" start="119" end="134" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReadConvertsStreamToString" start="136" end="155" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReadLockedConvertsStreamToString" start="157" end="189" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReadingRequiresExactlySameId" start="191" end="211" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testWriteDifferentSessionIdThanRead" start="216" end="230" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Simulates session_regenerate_id(true) which will require an INSERT or UPDATE (replace)."/>
    </docblock>
  </method>
  <method name="testWrongUsageStillWorks" start="232" end="246" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="wrong method sequence that should no happen, but still works" line="234"/>
    </inline>
  </method>
  <method name="testSessionDestroy" start="248" end="269" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSessionGC" start="271" end="298" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="test that you can set lifetime of a session after it has been read" line="284"/>
    </inline>
  </method>
  <method name="testGetConnection" start="300" end="308" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetConnectionConnectsIfNeeded" start="310" end="318" abstract="false" final="false" static="false" visibility="public"/>
  <method name="createStream" start="320" end="327" abstract="false" final="false" static="false" visibility="private">
    <parameter name="content" byreference="false" type="{unknown}"/>
  </method>
</class>
