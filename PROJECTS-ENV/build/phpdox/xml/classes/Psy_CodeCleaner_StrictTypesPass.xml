<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Psy\CodeCleaner\StrictTypesPass" namespace="Psy\CodeCleaner" name="StrictTypesPass" abstract="false" final="false" start="29" end="76">
  <file path="/home/web/example/src/freegame_developer/vendor/psy/psysh/src/Psy/CodeCleaner" file="StrictTypesPass.php" realpath="/home/web/example/src/freegame_developer/vendor/psy/psysh/src/Psy/CodeCleaner/StrictTypesPass.php" size="2314" time="2016-03-09T05:03:14+00:00" unixtime="1457499794" sha1="fd083ea311179c1f0f388829e02ffbc26ed6497e" relative="freegame_developer/vendor/psy/psysh/src/Psy/CodeCleaner/StrictTypesPass.php"/>
  <docblock>
    <description compact="Provide implicit strict types declarations for for subsequent execution.">The strict types pass remembers the last strict types declaration:

    declare(strict_types=1);

... which it then applies implicitly to all future evaluated code, until it
is replaced by a new declaration.</description>
  </docblock>
  <extends full="Psy\CodeCleaner\CodeCleanerPass" namespace="Psy\CodeCleaner" name="CodeCleanerPass"/>
  <member name="strictTypes" type="boolean" default="false" visibility="private" static="false" line="31"/>
  <method name="beforeTraverse" start="43" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="If this is a standalone strict types declaration, remember it for later.">Otherwise, apply remembered strict types declaration to to the code until
a new declaration is encountered.</description>
      <throws description="if an invalid `strict_types` declaration is found." type="object">
        <type full="Psy\Exception\FatalErrorException" namespace="Psy\Exception" name="FatalErrorException"/>
      </throws>
      <param type="array" variable="$nodes"/>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
</class>
