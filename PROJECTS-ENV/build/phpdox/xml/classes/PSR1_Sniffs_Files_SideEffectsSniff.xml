<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PSR1_Sniffs_Files_SideEffectsSniff" namespace="" name="PSR1_Sniffs_Files_SideEffectsSniff" abstract="false" final="false" start="29" end="227">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR1/Sniffs/Files" file="SideEffectsSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR1/Sniffs/Files/SideEffectsSniff.php" size="7973" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="5f78587b578ce338b39307320a1405c38b4c8ffe" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR1/Sniffs/Files/SideEffectsSniff.php"/>
  <docblock>
    <description compact="PSR1_Sniffs_Files_SideEffectsSniff.">Ensures a file declare new symbols and causes no other side effects, or executes
logic with side effects, but not both.</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <method name="register" start="38" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="54" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this sniff, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token in" type="int" variable="$stackPtr">the token stack.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Ignore the rest of the file." line="71"/>
    </inline>
  </method>
  <method name="_searchForConflict" start="92" end="224" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Searches for symbol declarations and side effects.">Returns the positions of both the first symbol declared and the first
side effect in the file. A NULL value for either indicates nothing was
found.</description>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The token to start searching from." type="int" variable="$start"/>
      <param description="The token to search to." type="int" variable="$end"/>
      <param description="The stack of tokens that make up" type="array" variable="$tokens">the file.</param>
      <return type="array"/>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="start" byreference="false" type="{unknown}"/>
    <parameter name="end" byreference="false" type="{unknown}"/>
    <parameter name="tokens" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="end for" line="217"/>
    </inline>
  </method>
</class>
