<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff" namespace="" name="Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff" abstract="false" final="false" start="34" end="184">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis" file="UnusedFunctionParameterSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis/UnusedFunctionParameterSniff.php" size="6985" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="a47670db1be990257d4bad32918fafea8df45a65" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/CodeAnalysis/UnusedFunctionParameterSniff.php"/>
  <docblock>
    <description compact="Checks the for unused function parameters.">This sniff checks that all function parameters are used in the function body.
One exception is made for empty function bodies or function bodies that only
contain comments. This could be useful for the classes that implement an
interface that defines multiple methods but the implementation only needs some
of them.</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Manuel Pichler &lt;mapi@manuel-pichler.de&gt;"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2007-2014 Manuel Pichler. All rights reserved."/>
    <license name="http://www.opensource.org/licenses/bsd-license.php BSD License"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <method name="register" start="43" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="59" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Skip broken function declarations." line="64"/>
      <comment value="end for" line="171"/>
    </inline>
  </method>
</class>
