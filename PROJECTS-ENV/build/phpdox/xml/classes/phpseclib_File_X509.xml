<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpseclib\File\X509" namespace="phpseclib\File" name="X509" abstract="false" final="false" start="42" end="4820">
  <file path="/home/web/example/src/freegame_developer/vendor/phpseclib/phpseclib/phpseclib/File" file="X509.php" realpath="/home/web/example/src/freegame_developer/vendor/phpseclib/phpseclib/phpseclib/File/X509.php" size="178601" time="2016-10-04T00:57:04+00:00" unixtime="1475542624" sha1="dcf275d3a7a43d9a82e56a5dc0388c1c92c7c718" relative="freegame_developer/vendor/phpseclib/phpseclib/phpseclib/File/X509.php"/>
  <docblock>
    <description compact="Pure-PHP X.509 Parser"/>
    <package value="X509"/>
    <author value="Jim Wigginton &lt;terrafrost@php.net&gt;"/>
    <access value="public"/>
  </docblock>
  <constant type="integer" name="VALIDATE_SIGNATURE_BY_CA" value="1">
    <docblock>
      <description compact="Flag to only accept signatures signed by certificate authorities">Not really used anymore but retained all the same to suppress E_NOTICEs from old installs</description>
      <access value="public"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_ARRAY" value="0">
    <docblock>
      <description compact="Return internal array representation"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_STRING" value="1">
    <docblock>
      <description compact="Return string"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_ASN1" value="2">
    <docblock>
      <description compact="Return ASN.1 name string"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_OPENSSL" value="3">
    <docblock>
      <description compact="Return OpenSSL compatible array"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_CANON" value="4">
    <docblock>
      <description compact="Return canonical ASN.1 RDNs string"/>
    </docblock>
  </constant>
  <constant type="integer" name="DN_HASH" value="5">
    <docblock>
      <description compact="Return name hash for file indexing"/>
    </docblock>
  </constant>
  <constant type="integer" name="FORMAT_PEM" value="0">
    <docblock>
      <description compact="Save as PEM">ie. a base64-encoded PEM with a header and a footer</description>
    </docblock>
  </constant>
  <constant type="integer" name="FORMAT_DER" value="1">
    <docblock>
      <description compact="Save as DER"/>
    </docblock>
  </constant>
  <constant type="integer" name="FORMAT_SPKAC" value="2">
    <docblock>
      <description compact="Save as a SPKAC">Only works on CSRs. Not currently supported.</description>
    </docblock>
  </constant>
  <constant type="integer" name="FORMAT_AUTO_DETECT" value="3">
    <docblock>
      <description compact="Auto-detect the format">Used only by the load*() functions</description>
    </docblock>
  </constant>
  <constant type="integer" name="ATTR_ALL" value="1">
    <docblock>
      <description compact="Attribute value disposition.">If disposition is &gt;= 0, this is the index of the target value.</description>
    </docblock>
  </constant>
  <constant type="integer" name="ATTR_APPEND" value="2"/>
  <constant type="integer" name="ATTR_REPLACE" value="3"/>
  <member name="Certificate" visibility="public" static="false" line="127">
    <docblock>
      <description compact="ASN.1 syntax for X.509 certificates"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="DirectoryString" visibility="public" static="false" line="134"/>
  <member name="PKCS9String" visibility="public" static="false" line="135"/>
  <member name="AttributeValue" visibility="public" static="false" line="136"/>
  <member name="Extensions" visibility="public" static="false" line="137"/>
  <member name="KeyUsage" visibility="public" static="false" line="138"/>
  <member name="ExtKeyUsageSyntax" visibility="public" static="false" line="139"/>
  <member name="BasicConstraints" visibility="public" static="false" line="140"/>
  <member name="KeyIdentifier" visibility="public" static="false" line="141"/>
  <member name="CRLDistributionPoints" visibility="public" static="false" line="142"/>
  <member name="AuthorityKeyIdentifier" visibility="public" static="false" line="143"/>
  <member name="CertificatePolicies" visibility="public" static="false" line="144"/>
  <member name="AuthorityInfoAccessSyntax" visibility="public" static="false" line="145"/>
  <member name="SubjectAltName" visibility="public" static="false" line="146"/>
  <member name="SubjectDirectoryAttributes" visibility="public" static="false" line="147"/>
  <member name="PrivateKeyUsagePeriod" visibility="public" static="false" line="148"/>
  <member name="IssuerAltName" visibility="public" static="false" line="149"/>
  <member name="PolicyMappings" visibility="public" static="false" line="150"/>
  <member name="NameConstraints" visibility="public" static="false" line="151"/>
  <member name="CPSuri" visibility="public" static="false" line="153"/>
  <member name="UserNotice" visibility="public" static="false" line="154"/>
  <member name="netscape_cert_type" visibility="public" static="false" line="156"/>
  <member name="netscape_comment" visibility="public" static="false" line="157"/>
  <member name="netscape_ca_policy_url" visibility="public" static="false" line="158"/>
  <member name="Name" visibility="public" static="false" line="160"/>
  <member name="RelativeDistinguishedName" visibility="public" static="false" line="161"/>
  <member name="CRLNumber" visibility="public" static="false" line="162"/>
  <member name="CRLReason" visibility="public" static="false" line="163"/>
  <member name="IssuingDistributionPoint" visibility="public" static="false" line="164"/>
  <member name="InvalidityDate" visibility="public" static="false" line="165"/>
  <member name="CertificateIssuer" visibility="public" static="false" line="166"/>
  <member name="HoldInstructionCode" visibility="public" static="false" line="167"/>
  <member name="SignedPublicKeyAndChallenge" visibility="public" static="false" line="168"/>
  <member name="PostalAddress" visibility="public" static="false" line="176"/>
  <member name="CertificationRequest" visibility="public" static="false" line="185">
    <docblock>
      <description compact="ASN.1 syntax for Certificate Signing Requests (RFC2986)"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="CertificateList" visibility="public" static="false" line="193">
    <docblock>
      <description compact="ASN.1 syntax for Certificate Revocation Lists (RFC5280)"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="dn" visibility="public" static="false" line="201">
    <docblock>
      <description compact="Distinguished Name"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="publicKey" visibility="public" static="false" line="209">
    <docblock>
      <description compact="Public key"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="privateKey" visibility="public" static="false" line="217">
    <docblock>
      <description compact="Private key"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="oids" visibility="public" static="false" line="226">
    <docblock>
      <description compact="Object identifiers for X.509 certificates"/>
      <var type="array"/>
      <access value="private"/>
      <link value="http://en.wikipedia.org/wiki/Object_identifier"/>
    </docblock>
  </member>
  <member name="CAs" visibility="public" static="false" line="234">
    <docblock>
      <description compact="The certificate authorities"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="currentCert" visibility="public" static="false" line="242">
    <docblock>
      <description compact="The currently loaded certificate"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="signatureSubject" visibility="public" static="false" line="253">
    <docblock>
      <description compact="The signature subject">There's no guarantee \phpseclib\File\X509 is going to re-encode an X.509 cert in the same way it was originally
encoded so we take save the portion of the original cert that the signature would have made for.</description>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="startDate" visibility="public" static="false" line="261">
    <docblock>
      <description compact="Certificate Start Date"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="endDate" visibility="public" static="false" line="269">
    <docblock>
      <description compact="Certificate End Date"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="serialNumber" visibility="public" static="false" line="277">
    <docblock>
      <description compact="Serial Number"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="currentKeyIdentifier" visibility="public" static="false" line="288">
    <docblock>
      <description compact="Key Identifier">See <link xmlns="http://xml.phpdox.net/src" value="http://tools.ietf.org/html/rfc5280#section-4.2.1.1 RFC5280#section-4.2.1.1"/> and
<link xmlns="http://xml.phpdox.net/src" value="http://tools.ietf.org/html/rfc5280#section-4.2.1.2 RFC5280#section-4.2.1.2"/>.
</description>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="caFlag" type="boolean" default="false" visibility="public" static="false" line="296">
    <docblock>
      <description compact="CA Flag"/>
      <var type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </var>
      <access value="private"/>
    </docblock>
  </member>
  <member name="challenge" visibility="public" static="false" line="304">
    <docblock>
      <description compact="SPKAC Challenge"/>
      <var type="string"/>
      <access value="private"/>
    </docblock>
  </member>
  <constructor name="__construct" start="312" end="1428" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Default Constructor."/>
      <return type="object">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </return>
      <access value="public"/>
    </docblock>
    <inline>
      <comment value="Explicitly Tagged Module, 1988 Syntax" line="314"/>
      <comment value="http://tools.ietf.org/html/rfc5280#appendix-A.1" line="315"/>
      <comment value="In practice, RDNs containing multiple name-value pairs (called &quot;multivalued RDNs&quot;) are rare," line="348"/>
      <comment xmlns="http://xml.phpdox.net/src" value="but they can be useful at times when either there is no unique attribute in the entry or you" line="349"/>
      <comment xmlns="http://xml.phpdox.net/src" value="want to ensure that the entry's DN contains some useful identifying information." line="350"/>
      <comment xmlns="http://xml.phpdox.net/src" value="- https://www.opends.org/wiki/page/DefinitionRelativeDistinguishedName" line="351"/>
      <comment value="http://tools.ietf.org/html/rfc5280#section-4.1.2.4" line="362"/>
      <comment value="http://tools.ietf.org/html/rfc5280#section-4.1.1.2" line="378"/>
      <comment value="A certificate using system MUST reject the certificate if it encounters" line="390"/>
      <comment xmlns="http://xml.phpdox.net/src" value="a critical extension it does not recognize; however, a non-critical" line="391"/>
      <comment xmlns="http://xml.phpdox.net/src" value="extension may be ignored if it is not recognized." line="392"/>
      <comment xmlns="http://xml.phpdox.net/src" value="http://tools.ietf.org/html/rfc5280#section-4.2" line="393"/>
      <comment value="http://tools.ietf.org/html/rfc5280#section-4.1.2.5" line="437"/>
      <comment value="assert($TBSCertificate['children']['signature'] == $Certificate['children']['signatureAlgorithm'])" line="453"/>
      <comment value="mapping is from &lt;http://www.mozilla.org/projects/security/pki/nss/tech-notes/tn3.html&gt;" line="1048"/>
      <comment value="attribute is used in RFC2986 but we're using the RFC5280 definition" line="1066"/>
      <comment value="adapted from &lt;http://tools.ietf.org/html/rfc2986&gt;" line="1088"/>
      <comment value="OIDs from RFC5280 and those RFCs mentioned in RFC5280#section-4.1.1.2" line="1263"/>
    </inline>
  </constructor>
  <method name="loadX509" start="1440" end="1503" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load X.509 certificate">Returns an associative array describing the X.509 cert or a false if the cert failed to load</description>
      <param type="string" variable="$cert"/>
      <param type="int" variable="$mode"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="cert" byreference="false" type="{unknown}"/>
    <parameter name="mode" byreference="false" type="{unknown}" default="" constant="self::FORMAT_AUTO_DETECT"/>
  </method>
  <method name="saveX509" start="1513" end="1580" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Save X.509 certificate"/>
      <param type="array" variable="$cert"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="string"/>
    </docblock>
    <parameter name="cert" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::FORMAT_PEM"/>
    <inline>
      <comment value="$filters['policyQualifiers']['qualifier'] = $type_utf8_string;" line="1554"/>
      <comment value="in the case of policyQualifiers/qualifier, the type has to be \phpseclib\File\ASN1::TYPE_IA5_STRING." line="1558"/>
      <comment xmlns="http://xml.phpdox.net/src" value="\phpseclib\File\ASN1::TYPE_PRINTABLE_STRING will cause OpenSSL's X.509 parser to spit out random" line="1559"/>
      <comment xmlns="http://xml.phpdox.net/src" value="characters." line="1560"/>
    </inline>
  </method>
  <method name="_mapInExtensions" start="1591" end="1630" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map extension values from octet string to extension-specific internal   format."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mapOutExtensions" start="1641" end="1696" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map extension values from extension-specific internal format to   octet string."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mapInAttributes" start="1707" end="1737" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map attribute values from ANY type to attribute-specific internal   format."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mapOutAttributes" start="1748" end="1780" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map attribute values from attribute-specific internal format to   ANY type."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mapInDNs" start="1791" end="1810" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map DN values from ANY type to DN-specific internal   format."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mapOutDNs" start="1821" end="1842" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Map DN values from DN-specific internal format to   ANY type."/>
      <param description="ref $root" type="array"/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$asn1"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="asn1" byreference="false" type="{unknown}"/>
  </method>
  <method name="_getMapping" start="1851" end="1942" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Associate an extension ID to an extension mapping"/>
      <param type="string" variable="$extnId"/>
      <access value="private"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="extnId" byreference="false" type="{unknown}"/>
  </method>
  <method name="loadCA" start="1951" end="1999" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load an X.509 certificate as a certificate authority"/>
      <param type="string" variable="$cert"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="cert" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="From RFC5280 &quot;PKIX Certificate and CRL Profile&quot;:" line="1968"/>
      <comment xmlns="http://xml.phpdox.net/src" value="If the keyUsage extension is present, then the subject public key" line="1969"/>
      <comment xmlns="http://xml.phpdox.net/src" value="MUST NOT be used to verify signatures on certificates or CRLs unless" line="1970"/>
      <comment xmlns="http://xml.phpdox.net/src" value="the corresponding keyCertSign or cRLSign bit is set." line="1971"/>
      <comment value="$keyUsage = $this-&gt;getExtension('id-ce-keyUsage');" line="1973"/>
      <comment value="if ($keyUsage &amp;&amp; !in_array('keyCertSign', $keyUsage)) {" line="1974"/>
      <comment value="return false;" line="1975"/>
      <comment value="}" line="1976"/>
      <comment value="From RFC5280 &quot;PKIX Certificate and CRL Profile&quot;:" line="1978"/>
      <comment xmlns="http://xml.phpdox.net/src" value="The cA boolean indicates whether the certified public key may be used" line="1979"/>
      <comment xmlns="http://xml.phpdox.net/src" value="to verify certificate signatures.  If the cA boolean is not asserted," line="1980"/>
      <comment xmlns="http://xml.phpdox.net/src" value="then the keyCertSign bit in the key usage extension MUST NOT be" line="1981"/>
      <comment xmlns="http://xml.phpdox.net/src" value="asserted.  If the basic constraints extension is not present in a" line="1982"/>
      <comment xmlns="http://xml.phpdox.net/src" value="version 3 certificate, or the extension is present but the cA boolean" line="1983"/>
      <comment xmlns="http://xml.phpdox.net/src" value="is not asserted, then the certified public key MUST NOT be used to" line="1984"/>
      <comment xmlns="http://xml.phpdox.net/src" value="verify certificate signatures." line="1985"/>
      <comment value="$basicConstraints = $this-&gt;getExtension('id-ce-basicConstraints');" line="1987"/>
      <comment value="if (!$basicConstraints || !$basicConstraints['cA']) {" line="1988"/>
      <comment value="return false;" line="1989"/>
      <comment value="}" line="1990"/>
    </inline>
  </method>
  <method name="validateURL" start="2018" end="2065" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validate an X.509 certificate against a URL">From RFC2818 "HTTP over TLS":

Matching is performed using the matching rules specified by
[RFC2459].  If more than one identity of a given type is present in
the certificate (e.g., more than one dNSName name, a match in any one
of the set is considered acceptable.) Names may contain the wildcard
character * which is considered to match any single domain name
component or component fragment. E.g., *.a.com matches foo.a.com but
not bar.foo.a.com. f*.com matches foo.com but not bar.com.</description>
      <param type="string" variable="$url"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDate" start="2075" end="2098" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validate a date">If $date isn't defined it is assumed to be the current date.</description>
      <param description="optional" type="int" variable="$date"/>
      <access value="public"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="validateSignature" start="2115" end="2220" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validate a signature">Works on X.509 certs, CSR's and CRL's.
Returns true if the signature is verified, false if it is not correct or null on error
By default returns false for self-signed certs. Call validateSignature(false) to make this support
self-signed.
The behavior of this function is inspired by <link xmlns="http://xml.phpdox.net/src" value="http://php.net/openssl-verify openssl_verify"/>.
</description>
      <param description="optional" type="object" variable="$caonly">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="caonly" byreference="false" type="boolean" default="true"/>
    <inline>
      <todo value="" line="2121"/>
      <comment xmlns="http://xml.phpdox.net/src" value="&quot;emailAddress attribute values are not case-sensitive (e.g., &quot;subscriber@example.com&quot; is the same as &quot;SUBSCRIBER@EXAMPLE.COM&quot;).&quot;" line="2122"/>
      <comment xmlns="http://xml.phpdox.net/src" value="-- http://tools.ietf.org/html/rfc5280#section-4.1.2.6" line="2123"/>
      <comment xmlns="http://xml.phpdox.net/src" value="implement pathLenConstraint in the id-ce-basicConstraints extension" line="2124"/>
    </inline>
  </method>
  <method name="_validateSignature" start="2235" end="2265" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validates a signature">Returns true if the signature is verified, false if it is not correct or null on error</description>
      <param type="string" variable="$publicKeyAlgorithm"/>
      <param type="string" variable="$publicKey"/>
      <param type="string" variable="$signatureAlgorithm"/>
      <param type="string" variable="$signature"/>
      <param type="string" variable="$signatureSubject"/>
      <access value="private"/>
      <return type="int"/>
    </docblock>
    <parameter name="publicKeyAlgorithm" byreference="false" type="{unknown}"/>
    <parameter name="publicKey" byreference="false" type="{unknown}"/>
    <parameter name="signatureAlgorithm" byreference="false" type="{unknown}"/>
    <parameter name="signature" byreference="false" type="{unknown}"/>
    <parameter name="signatureSubject" byreference="false" type="{unknown}"/>
  </method>
  <method name="_reformatKey" start="2277" end="2291" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Reformat public keys">Reformats a public key to a format supported by phpseclib (if applicable)</description>
      <param type="string" variable="$algorithm"/>
      <param type="string" variable="$key"/>
      <access value="private"/>
      <return type="string"/>
    </docblock>
    <parameter name="algorithm" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="_decodeIP" start="2302" end="2305" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Decodes an IP address">Takes in a base64 encoded "blob" and returns a human readable IP address</description>
      <param type="string" variable="$ip"/>
      <access value="private"/>
      <return type="string"/>
    </docblock>
    <parameter name="ip" byreference="false" type="{unknown}"/>
  </method>
  <method name="_encodeIP" start="2316" end="2319" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Encodes an IP address">Takes a human readable IP address into a base64-encoded "blob"</description>
      <param type="string" variable="$ip"/>
      <access value="private"/>
      <return type="string"/>
    </docblock>
    <parameter name="ip" byreference="false" type="{unknown}"/>
  </method>
  <method name="_translateDNProp" start="2328" end="2411" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="&quot;Normalizes&quot; a Distinguished Name property"/>
      <param type="string" variable="$propName"/>
      <access value="private"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
  </method>
  <method name="setDNProp" start="2422" end="2445" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a Distinguished Name property"/>
      <param type="string" variable="$propName"/>
      <param type="mixed" variable="$propValue"/>
      <param description="optional" type="string" variable="$type"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
    <parameter name="propValue" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="string" default="'utf8String'"/>
  </method>
  <method name="removeDNProp" start="2453" end="2472" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove Distinguished Name properties"/>
      <param type="string" variable="$propName"/>
      <access value="public"/>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDNProp" start="2483" end="2536" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get Distinguished Name properties"/>
      <param type="string" variable="$propName"/>
      <param description="optional" type="array" variable="$dn"/>
      <param description="optional" type="object" variable="$withType">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <return type="mixed"/>
      <access value="public"/>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
    <parameter name="dn" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="withType" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setDN" start="2547" end="2579" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a Distinguished Name"/>
      <param type="mixed" variable="$dn"/>
      <param description="optional" type="object" variable="$merge">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <param description="optional" type="string" variable="$type"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="dn" byreference="false" type="{unknown}"/>
    <parameter name="merge" byreference="false" type="boolean" default="false"/>
    <parameter name="type" byreference="false" type="string" default="'utf8String'"/>
    <inline>
      <comment value="handles everything else" line="2568"/>
    </inline>
  </method>
  <method name="getDN" start="2589" end="2726" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Distinguished Name for a certificates subject"/>
      <param description="optional" type="mixed" variable="$format"/>
      <param description="optional" type="array" variable="$dn"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::DN_ARRAY"/>
    <parameter name="dn" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="Default is to return a string." line="2645"/>
    </inline>
  </method>
  <method name="getIssuerDN" start="2735" end="2747" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Distinguished Name for a certificate/crl issuer"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::DN_ARRAY"/>
  </method>
  <method name="getSubjectDN" start="2757" end="2771" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Distinguished Name for a certificate/csr subject Alias of getDN()"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::DN_ARRAY"/>
  </method>
  <method name="getIssuerDNProp" start="2781" end="2793" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an individual Distinguished Name property for a certificate/crl issuer"/>
      <param type="string" variable="$propName"/>
      <param description="optional" type="object" variable="$withType">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
    <parameter name="withType" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getSubjectDNProp" start="2803" end="2817" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an individual Distinguished Name property for a certificate/csr subject"/>
      <param type="string" variable="$propName"/>
      <param description="optional" type="object" variable="$withType">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="propName" byreference="false" type="{unknown}"/>
    <parameter name="withType" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getChain" start="2825" end="2862" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the certificate chain for the current cert"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="setPublicKey" start="2873" end="2877" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set public key">Key needs to be a \phpseclib\Crypt\RSA object</description>
      <param type="object" variable="$key"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="setPrivateKey" start="2887" end="2890" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set private key">Key needs to be a \phpseclib\Crypt\RSA object</description>
      <param type="object" variable="$key"/>
      <access value="public"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="setChallenge" start="2900" end="2903" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set challenge">Used for SPKAC CSR's</description>
      <param type="string" variable="$challenge"/>
      <access value="public"/>
    </docblock>
    <parameter name="challenge" byreference="false" type="{unknown}"/>
  </method>
  <method name="getPublicKey" start="2913" end="2944" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the public key">Returns a \phpseclib\Crypt\RSA object or a false.</description>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="loadCSR" start="2953" end="3025" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load a Certificate Signing Request"/>
      <param type="string" variable="$csr"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="csr" byreference="false" type="{unknown}"/>
    <parameter name="mode" byreference="false" type="{unknown}" default="" constant="self::FORMAT_AUTO_DETECT"/>
    <inline>
      <comment value="see http://tools.ietf.org/html/rfc2986" line="2968"/>
    </inline>
  </method>
  <method name="saveCSR" start="3035" end="3077" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Save CSR request"/>
      <param type="array" variable="$csr"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="string"/>
    </docblock>
    <parameter name="csr" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::FORMAT_PEM"/>
  </method>
  <method name="loadSPKAC" start="3090" end="3152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load a SPKAC CSR">SPKAC's are produced by the HTML5 keygen element:

https://developer.mozilla.org/en-US/docs/HTML/Element/keygen</description>
      <param type="string" variable="$csr"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="spkac" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="see http://www.w3.org/html/wg/drafts/html/master/forms.html#signedpublickeyandchallenge" line="3100"/>
      <comment value="OpenSSL produces SPKAC's that are preceded by the string SPKAC=" line="3104"/>
    </inline>
  </method>
  <method name="saveSPKAC" start="3162" end="3195" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Save a SPKAC CSR request"/>
      <param type="array" variable="$csr"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="string"/>
    </docblock>
    <parameter name="spkac" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::FORMAT_PEM"/>
  </method>
  <method name="loadCRL" start="3204" end="3264" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load a Certificate Revocation List"/>
      <param type="string" variable="$crl"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="crl" byreference="false" type="{unknown}"/>
    <parameter name="mode" byreference="false" type="{unknown}" default="" constant="self::FORMAT_AUTO_DETECT"/>
  </method>
  <method name="saveCRL" start="3274" end="3322" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Save Certificate Revocation List."/>
      <param type="array" variable="$crl"/>
      <param description="optional" type="int" variable="$format"/>
      <access value="public"/>
      <return type="string"/>
    </docblock>
    <parameter name="crl" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::FORMAT_PEM"/>
  </method>
  <method name="_timeField" start="3336" end="3344" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper function to build a time field according to RFC 3280 section  - 4.1.2.5 Validity  - 5.1.2.4 This Update  - 5.1.2.5 Next Update  - 5.1.2.6 Revoked Certificates by choosing utcTime iff year of date given is before 2050 and generalTime else."/>
      <param description="in format date('D, d M Y H:i:s O')" type="string" variable="$date"/>
      <access value="private"/>
      <return type="array"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="the same way ASN1.php parses this" line="3338"/>
    </inline>
  </method>
  <method name="sign" start="3359" end="3528" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sign an X.509 certificate">$issuer's private key needs to be loaded.
$subject can be either an existing X.509 cert (if you want to resign it),
a CSR or something with the DN and public key explicitly set.</description>
      <param type="object" variable="$issuer">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </param>
      <param type="object" variable="$subject">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </param>
      <param description="optional" type="string" variable="$signatureAlgorithm"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="issuer" byreference="false" type="{unknown}"/>
    <parameter name="subject" byreference="false" type="{unknown}"/>
    <parameter name="signatureAlgorithm" byreference="false" type="string" default="'sha1WithRSAEncryption'"/>
    <inline>
      <comment value="resync $this-&gt;signatureSubject" line="3516"/>
      <comment value="save $tbsCertificate in case there are any \phpseclib\File\ASN1\Element objects in it" line="3517"/>
    </inline>
  </method>
  <method name="signCSR" start="3536" end="3586" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sign a CSR"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="signatureAlgorithm" byreference="false" type="string" default="'sha1WithRSAEncryption'"/>
    <inline>
      <comment value="resync $this-&gt;signatureSubject" line="3574"/>
      <comment value="save $certificationRequestInfo in case there are any \phpseclib\File\ASN1\Element objects in it" line="3575"/>
    </inline>
  </method>
  <method name="signSPKAC" start="3594" end="3651" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sign a SPKAC"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="signatureAlgorithm" byreference="false" type="string" default="'sha1WithRSAEncryption'"/>
    <inline>
      <comment value="re-signing a SPKAC seems silly but since everything else supports re-signing why not?" line="3614"/>
      <comment value="resync $this-&gt;signatureSubject" line="3639"/>
      <comment value="save $publicKeyAndChallenge in case there are any \phpseclib\File\ASN1\Element objects in it" line="3640"/>
    </inline>
  </method>
  <method name="signCRL" start="3664" end="3782" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sign a CRL">$issuer's private key needs to be loaded.</description>
      <param type="object" variable="$issuer">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </param>
      <param type="object" variable="$crl">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </param>
      <param description="optional" type="string" variable="$signatureAlgorithm"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="issuer" byreference="false" type="{unknown}"/>
    <parameter name="crl" byreference="false" type="{unknown}"/>
    <parameter name="signatureAlgorithm" byreference="false" type="string" default="'sha1WithRSAEncryption'"/>
    <inline>
      <comment value="Be sure version &gt;= v2 if some extension found." line="3717"/>
      <comment value="Store additional extensions." line="3735"/>
      <comment value="resync $this-&gt;signatureSubject" line="3770"/>
      <comment value="save $tbsCertList in case there are any \phpseclib\File\ASN1\Element objects in it" line="3771"/>
    </inline>
  </method>
  <method name="_sign" start="3793" end="3813" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="X.509 certificate signing helper function."/>
      <param type="object" variable="$key"/>
      <param type="object" variable="$subject">
        <type full="\phpseclib\File\X509" namespace="\phpseclib\File" name="X509"/>
      </param>
      <param type="string" variable="$signatureAlgorithm"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="signatureAlgorithm" byreference="false" type="{unknown}"/>
  </method>
  <method name="setStartDate" start="3821" end="3824" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set certificate start date"/>
      <param type="string" variable="$date"/>
      <access value="public"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
  </method>
  <method name="setEndDate" start="3832" end="3849" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set certificate end date"/>
      <param type="string" variable="$date"/>
      <access value="public"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="To indicate that a certificate has no well-defined expiration date," line="3834"/>
      <comment xmlns="http://xml.phpdox.net/src" value="the notAfter SHOULD be assigned the GeneralizedTime value of" line="3835"/>
      <comment xmlns="http://xml.phpdox.net/src" value="99991231235959Z." line="3836"/>
      <comment xmlns="http://xml.phpdox.net/src" value="-- http://tools.ietf.org/html/rfc5280#section-4.1.2.5" line="3837"/>
    </inline>
  </method>
  <method name="setSerialNumber" start="3858" end="3861" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set Serial Number"/>
      <param type="string" variable="$serial"/>
      <param variable="$base" type="object">
        <type full="phpseclib\File\optional" namespace="phpseclib\File" name="optional"/>
      </param>
      <access value="public"/>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="base" byreference="false" type="integer" default="256"/>
  </method>
  <method name="makeCA" start="3868" end="3871" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Turns the certificate into a certificate authority"/>
      <access value="public"/>
    </docblock>
  </method>
  <method name="_isSubArrayValid" start="3885" end="3904" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check for validity of subarray">This is intended for use in conjunction with _subArrayUnchecked(),
implementing the checks included in _subArray() but without copying
a potentially large array by passing its reference by-value to is_array().</description>
      <param type="array" variable="$root"/>
      <param type="string" variable="$path"/>
      <return type="boolean"/>
      <access value="private"/>
    </docblock>
    <parameter name="root" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="_subArrayUnchecked" start="3922" end="3939" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a reference to a subarray">This variant of _subArray() does no is_array() checking,
so $root should be checked with _isSubArrayValid() first.

This is here for performance reasons:
Passing a reference (i.e. $root) by-value (i.e. to is_array())
creates a copy. If $root is an especially large array, this is expensive.</description>
      <param type="array" variable="$root"/>
      <param description="absolute path with / as component separator" type="string" variable="$path"/>
      <param description="optional" type="object" variable="$create">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\array|false" namespace="phpseclib\File" name="array|false"/>
      </return>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="create" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="_subArray" start="3950" end="3975" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a reference to a subarray"/>
      <param type="array" variable="$root"/>
      <param description="absolute path with / as component separator" type="string" variable="$path"/>
      <param description="optional" type="object" variable="$create">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\array|false" namespace="phpseclib\File" name="array|false"/>
      </return>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="create" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="_extensions" start="3986" end="4030" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a reference to an extension subarray"/>
      <param type="array" variable="$root"/>
      <param description="optional absolute path with / as component separator" type="string" variable="$path"/>
      <param description="optional" type="object" variable="$create">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\array|false" namespace="phpseclib\File" name="array|false"/>
      </return>
    </docblock>
    <parameter name="root" byreference="true" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="create" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="_removeExtension" start="4040" end="4058" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove an Extension"/>
      <param type="string" variable="$id"/>
      <param description="optional" type="string" variable="$path"/>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="_getExtension" start="4071" end="4086" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an Extension">Returns the extension if it exists and false if not</description>
      <param type="string" variable="$id"/>
      <param description="optional" type="array" variable="$cert"/>
      <param description="optional" type="string" variable="$path"/>
      <access value="private"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="cert" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="_getExtensions" start="4096" end="4108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a list of all extensions in use"/>
      <param description="optional" type="array" variable="$cert"/>
      <param description="optional" type="string" variable="$path"/>
      <access value="private"/>
      <return type="array"/>
    </docblock>
    <parameter name="cert" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="_setExtension" start="4121" end="4144" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set an Extension"/>
      <param type="string" variable="$id"/>
      <param type="mixed" variable="$value"/>
      <param description="optional" type="object" variable="$critical">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <param description="optional" type="object" variable="$replace">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <param description="optional" type="string" variable="$path"/>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="critical" byreference="false" type="boolean" default="false"/>
    <parameter name="replace" byreference="false" type="boolean" default="true"/>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="removeExtension" start="4153" end="4156" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove a certificate, CSR or CRL Extension"/>
      <param type="string" variable="$id"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExtension" start="4168" end="4171" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a certificate, CSR or CRL Extension">Returns the extension if it exists and false if not</description>
      <param type="string" variable="$id"/>
      <param description="optional" type="array" variable="$cert"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="cert" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getExtensions" start="4180" end="4183" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a list of all extensions in use in certificate, CSR or CRL"/>
      <param description="optional" type="array" variable="$cert"/>
      <access value="public"/>
      <return type="array"/>
    </docblock>
    <parameter name="cert" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="setExtension" start="4195" end="4198" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a certificate, CSR or CRL Extension"/>
      <param type="string" variable="$id"/>
      <param type="mixed" variable="$value"/>
      <param description="optional" type="object" variable="$critical">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <param description="optional" type="object" variable="$replace">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="critical" byreference="false" type="boolean" default="false"/>
    <parameter name="replace" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="removeAttribute" start="4208" end="4246" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove a CSR attribute."/>
      <param type="string" variable="$id"/>
      <param description="optional" type="int" variable="$disposition"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="disposition" byreference="false" type="{unknown}" default="" constant="self::ATTR_ALL"/>
  </method>
  <method name="getAttribute" start="4259" end="4290" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a CSR attribute">Returns the attribute if it exists and false if not</description>
      <param type="string" variable="$id"/>
      <param description="optional" type="int" variable="$disposition"/>
      <param description="optional" type="array" variable="$csr"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="disposition" byreference="false" type="{unknown}" default="" constant="self::ATTR_ALL"/>
    <parameter name="csr" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getAttributes" start="4299" end="4315" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a list of all CSR attributes in use"/>
      <param description="optional" type="array" variable="$csr"/>
      <access value="public"/>
      <return type="array"/>
    </docblock>
    <parameter name="csr" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="setAttribute" start="4326" end="4371" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a CSR attribute"/>
      <param type="string" variable="$id"/>
      <param type="mixed" variable="$value"/>
      <param description="optional" type="object" variable="$disposition">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="disposition" byreference="false" type="{unknown}" default="" constant="self::ATTR_ALL"/>
  </method>
  <method name="setKeyIdentifier" start="4381" end="4388" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the subject key identifier">This is used by the id-ce-authorityKeyIdentifier and the id-ce-subjectKeyIdentifier extensions.</description>
      <param type="string" variable="$value"/>
      <access value="public"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="computeKeyIdentifier" start="4408" end="4474" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compute a public key identifier.">Although key identifiers may be set to any unique value, this function
computes key identifiers from public key according to the two
recommended methods (4.2.1.2 RFC 3280).
Highly polymorphic: try to accept all possible forms of key:
- Key object
- \phpseclib\File\X509 object with public or private key defined
- Certificate or CSR array
- \phpseclib\File\ASN1\Element object
- PEM or DER string</description>
      <param description="optional" type="mixed" variable="$key"/>
      <param description="optional" type="int" variable="$method"/>
      <access value="public"/>
      <return description="binary key identifier" type="string"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="method" byreference="false" type="integer" default="1"/>
    <inline>
      <comment value="If in PEM format, convert to binary." line="4461"/>
      <comment value="Now we have the key string: compute its sha-1 sum." line="4464"/>
    </inline>
  </method>
  <method name="_formatSubjectPublicKey" start="4482" end="4495" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Format a public key as appropriate"/>
      <access value="private"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setDomain" start="4503" end="4508" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the domain name's which the cert is to be valid for"/>
      <access value="public"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setIPAddress" start="4516" end="4525" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the IP Addresses's which the cert is to be valid for"/>
      <access value="public"/>
      <param description="optional" type="string" variable="$ipAddress"/>
    </docblock>
    <inline>
      <comment value="if (!isset($this-&gt;domains)) {" line="4519"/>
      <comment xmlns="http://xml.phpdox.net/src" value="$this-&gt;removeDNProp('id-at-commonName');" line="4520"/>
      <comment xmlns="http://xml.phpdox.net/src" value="$this-&gt;setDNProp('id-at-commonName', $this-&gt;ipAddresses[0]);" line="4521"/>
      <comment xmlns="http://xml.phpdox.net/src" value="}" line="4522"/>
    </inline>
  </method>
  <method name="_dnsName" start="4534" end="4537" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper function to build domain array"/>
      <access value="private"/>
      <param type="string" variable="$domain"/>
      <return type="array"/>
    </docblock>
    <parameter name="domain" byreference="false" type="{unknown}"/>
  </method>
  <method name="_iPAddress" start="4548" end="4551" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper function to build IP Address array">(IPv6 is not currently supported)</description>
      <access value="private"/>
      <param type="string" variable="$address"/>
      <return type="array"/>
    </docblock>
    <parameter name="address" byreference="false" type="{unknown}"/>
  </method>
  <method name="_revokedCertificate" start="4562" end="4580" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the index of a revoked certificate."/>
      <param type="array" variable="$rclist"/>
      <param type="string" variable="$serial"/>
      <param description="optional" type="object" variable="$create">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="private"/>
      <return type="object">
        <type full="phpseclib\File\int|false" namespace="phpseclib\File" name="int|false"/>
      </return>
    </docblock>
    <parameter name="rclist" byreference="true" type="{unknown}"/>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="create" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="revoke" start="4590" end="4607" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Revoke a certificate."/>
      <param type="string" variable="$serial"/>
      <param description="optional" type="string" variable="$date"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="date" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="unrevoke" start="4616" end="4627" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Unrevoke a certificate."/>
      <param type="string" variable="$serial"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRevoked" start="4636" end="4645" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a revoked certificate."/>
      <param type="string" variable="$serial"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
  </method>
  <method name="listRevoked" start="4654" end="4673" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="List revoked certificates"/>
      <param description="optional" type="array" variable="$crl"/>
      <access value="public"/>
      <return type="array"/>
    </docblock>
    <parameter name="crl" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="removeRevokedCertificateExtension" start="4683" end="4692" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove a Revoked Certificate Extension"/>
      <param type="string" variable="$serial"/>
      <param type="string" variable="$id"/>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRevokedCertificateExtension" start="4705" end="4718" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a Revoked Certificate Extension">Returns the extension if it exists and false if not</description>
      <param type="string" variable="$serial"/>
      <param type="string" variable="$id"/>
      <param description="optional" type="array" variable="$crl"/>
      <access value="public"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="crl" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getRevokedCertificateExtensions" start="4728" end="4741" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a list of all extensions in use for a given revoked certificate"/>
      <param type="string" variable="$serial"/>
      <param description="optional" type="array" variable="$crl"/>
      <access value="public"/>
      <return type="array"/>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="crl" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="setRevokedCertificateExtension" start="4754" end="4765" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a Revoked Certificate Extension"/>
      <param type="string" variable="$serial"/>
      <param type="string" variable="$id"/>
      <param type="mixed" variable="$value"/>
      <param description="optional" type="object" variable="$critical">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <param description="optional" type="object" variable="$replace">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </param>
      <access value="public"/>
      <return type="object">
        <type full="phpseclib\File\bool" namespace="phpseclib\File" name="bool"/>
      </return>
    </docblock>
    <parameter name="serial" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="critical" byreference="false" type="boolean" default="false"/>
    <parameter name="replace" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="_extractBER" start="4774" end="4792" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Extract raw BER from Base64 encoding"/>
      <access value="private"/>
      <param type="string" variable="$str"/>
      <return type="string"/>
    </docblock>
    <parameter name="str" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="X.509 certs are assumed to be base64 encoded but sometimes they'll have additional things in them" line="4776"/>
      <comment xmlns="http://xml.phpdox.net/src" value="above and beyond the ceritificate." line="4777"/>
      <comment xmlns="http://xml.phpdox.net/src" value="ie. some may have the following preceding the -----BEGIN CERTIFICATE----- line:" line="4778"/>
      <comment xmlns="http://xml.phpdox.net/src" value="Bag Attributes" line="4779"/>
      <comment xmlns="http://xml.phpdox.net/src" value="localKeyID: 01 00 00 00" line="4780"/>
      <comment xmlns="http://xml.phpdox.net/src" value="subject=/O=organization/OU=org unit/CN=common name" line="4781"/>
      <comment xmlns="http://xml.phpdox.net/src" value="issuer=/O=organization/CN=common name" line="4782"/>
      <comment value="remove the -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- stuff" line="4786"/>
      <comment value="remove new lines" line="4788"/>
    </inline>
  </method>
  <method name="getOID" start="4812" end="4819" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the OID corresponding to a name">What's returned in the associative array returned by loadX509() (or load*()) is either a name or an OID if
no OID to name mapping is available. The problem with this is that what may be an unmapped OID in one version
of phpseclib may not be unmapped in the next version, so apps that are looking at this OID may not be able
to work from version to version.

This method will return the OID if a name is passed to it and if no mapping is avialable it'll assume that
what's being passed to it already is an OID and return that instead. A few examples.

getOID('2.16.840.1.101.3.4.2.1') == '2.16.840.1.101.3.4.2.1'
getOID('id-sha256') == '2.16.840.1.101.3.4.2.1'
getOID('zzz') == 'zzz'</description>
      <access value="public"/>
      <return type="string"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
</class>
