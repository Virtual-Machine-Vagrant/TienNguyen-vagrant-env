<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Generic_Sniffs_PHP_NoSilencedErrorsSniff" namespace="" name="Generic_Sniffs_PHP_NoSilencedErrorsSniff" abstract="false" final="false" start="33" end="79">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/PHP" file="NoSilencedErrorsSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/PHP/NoSilencedErrorsSniff.php" size="2099" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="b705bfcd5a0f1718f0314148cc18bfb9716cec5c" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/PHP/NoSilencedErrorsSniff.php"/>
  <docblock>
    <description compact="Generic_Sniffs_PHP_NoSilencedErrorsSniff.">Throws an error or warning when any code prefixed with an asperand is encountered.

&lt;code&gt;
 if (@in_array($array, $needle))
 {
     doSomething();
 }
&lt;/code&gt;</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Andy Brockhurst &lt;abrock@yahoo-inc.com&gt;"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <member name="error" type="boolean" default="false" visibility="public" static="false" line="41">
    <docblock>
      <description compact="If true, an error will be thrown; otherwise a warning."/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <method name="register" start="49" end="53" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="65" end="76" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
  </method>
</class>
