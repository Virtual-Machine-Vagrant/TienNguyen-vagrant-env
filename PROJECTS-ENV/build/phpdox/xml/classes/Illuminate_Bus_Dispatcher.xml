<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Bus\Dispatcher" namespace="Illuminate\Bus" name="Dispatcher" abstract="false" final="false" start="21" end="409">
  <file path="/home/web/example/src/freegame_developer/vendor/laravel/framework/src/Illuminate/Bus" file="Dispatcher.php" realpath="/home/web/example/src/freegame_developer/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php" size="10906" time="2016-02-24T15:13:21+00:00" unixtime="1456326801" sha1="0c0d591d10500f5f741d8f3187d709b12df1c83f" relative="freegame_developer/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php"/>
  <implements full="Illuminate\Contracts\Bus\Dispatcher" namespace="Illuminate\Contracts\Bus" name="Dispatcher"/>
  <implements full="Illuminate\Contracts\Bus\QueueingDispatcher" namespace="Illuminate\Contracts\Bus" name="QueueingDispatcher"/>
  <implements full="Illuminate\Contracts\Bus\HandlerResolver" namespace="Illuminate\Contracts\Bus" name="HandlerResolver"/>
  <member name="container" visibility="protected" static="false" line="28">
    <docblock>
      <description compact="The container implementation."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Container\Container" namespace="\Illuminate\Contracts\Container" name="Container"/>
      </var>
    </docblock>
  </member>
  <member name="pipeline" visibility="protected" static="false" line="35">
    <docblock>
      <description compact="The pipeline instance for the bus."/>
      <var type="object">
        <type full="\Illuminate\Pipeline\Pipeline" namespace="\Illuminate\Pipeline" name="Pipeline"/>
      </var>
    </docblock>
  </member>
  <member name="pipes" type="array" default="" visibility="protected" static="false" line="42">
    <docblock>
      <description compact="The pipes to send commands through before dispatching."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="queueResolver" visibility="protected" static="false" line="49">
    <docblock>
      <description compact="The queue resolver callback."/>
      <var type="object">
        <type full="\Closure|null" namespace="" name="Closure|null"/>
      </var>
    </docblock>
  </member>
  <member name="mappings" type="array" default="" visibility="protected" static="false" line="56">
    <docblock>
      <description compact="All of the command-to-handler mappings."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="mapper" visibility="protected" static="false" line="63">
    <docblock>
      <description compact="The fallback mapping Closure."/>
      <var type="object">
        <type full="\Closure" namespace="" name="Closure"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="72" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new command dispatcher instance."/>
      <param type="object" variable="$container">
        <type full="\Illuminate\Contracts\Container\Container" namespace="\Illuminate\Contracts\Container" name="Container"/>
      </param>
      <param type="object" variable="$queueResolver">
        <type full="\Closure|null" namespace="" name="Closure|null"/>
      </param>
      <return type="object">
        <type full="Illuminate\Bus\void" namespace="Illuminate\Bus" name="void"/>
      </return>
    </docblock>
    <parameter name="container" byreference="false" type="object">
      <type full="Illuminate\Contracts\Container\Container" namespace="Illuminate\Contracts\Container" name="Container"/>
    </parameter>
    <parameter name="queueResolver" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </constructor>
  <method name="dispatchFromArray" start="86" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Marshal a command and dispatch it to its appropriate handler."/>
      <param type="mixed" variable="$command"/>
      <param type="array" variable="$array"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="dispatchFrom" start="99" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Marshal a command and dispatch it to its appropriate handler."/>
      <param type="mixed" variable="$command"/>
      <param type="object" variable="$source">
        <type full="\ArrayAccess" namespace="" name="ArrayAccess"/>
      </param>
      <param type="array" variable="$extras"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="source" byreference="false" type="object">
      <type full="ArrayAccess" namespace="" name="ArrayAccess"/>
    </parameter>
    <parameter name="extras" byreference="false" type="array" default=""/>
  </method>
  <method name="marshalFromArray" start="111" end="114" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Marshal a command from the given array."/>
      <param type="string" variable="$command"/>
      <param type="array" variable="$array"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="marshal" start="124" end="137" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Marshal a command from the given array accessible object."/>
      <param type="string" variable="$command"/>
      <param type="object" variable="$source">
        <type full="\ArrayAccess" namespace="" name="ArrayAccess"/>
      </param>
      <param type="array" variable="$extras"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="source" byreference="false" type="object">
      <type full="ArrayAccess" namespace="" name="ArrayAccess"/>
    </parameter>
    <parameter name="extras" byreference="false" type="array" default=""/>
  </method>
  <method name="getParameterValueForCommand" start="148" end="163" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get a parameter value for a marshalled command."/>
      <param type="string" variable="$command"/>
      <param type="object" variable="$source">
        <type full="\ArrayAccess" namespace="" name="ArrayAccess"/>
      </param>
      <param type="object" variable="$parameter">
        <type full="\ReflectionParameter" namespace="" name="ReflectionParameter"/>
      </param>
      <param type="array" variable="$extras"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="source" byreference="false" type="object">
      <type full="ArrayAccess" namespace="" name="ArrayAccess"/>
    </parameter>
    <parameter name="parameter" byreference="false" type="object">
      <type full="ReflectionParameter" namespace="" name="ReflectionParameter"/>
    </parameter>
    <parameter name="extras" byreference="false" type="array" default=""/>
  </method>
  <method name="dispatch" start="172" end="179" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dispatch a command to its appropriate handler."/>
      <param type="mixed" variable="$command"/>
      <param type="object" variable="$afterResolving">
        <type full="\Closure|null" namespace="" name="Closure|null"/>
      </param>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="afterResolving" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </method>
  <method name="dispatchNow" start="188" end="205" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dispatch a command to its appropriate handler in the current process."/>
      <param type="mixed" variable="$command"/>
      <param type="object" variable="$afterResolving">
        <type full="\Closure|null" namespace="" name="Closure|null"/>
      </param>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="afterResolving" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </method>
  <method name="commandShouldBeQueued" start="213" end="222" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the given command should be queued."/>
      <param type="mixed" variable="$command"/>
      <return type="object">
        <type full="Illuminate\Bus\bool" namespace="Illuminate\Bus" name="bool"/>
      </return>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="dispatchToQueue" start="232" end="245" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dispatch a command to its appropriate handler behind a queue."/>
      <param type="mixed" variable="$command"/>
      <return type="mixed"/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="pushCommandToQueue" start="254" end="269" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Push the command onto the given queue instance."/>
      <param type="object" variable="$queue">
        <type full="\Illuminate\Contracts\Queue\Queue" namespace="\Illuminate\Contracts\Queue" name="Queue"/>
      </param>
      <param type="mixed" variable="$command"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="queue" byreference="false" type="{unknown}"/>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="resolveHandler" start="277" end="284" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the handler instance for the given command."/>
      <param type="mixed" variable="$command"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHandlerClass" start="292" end="299" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the handler class for the given command."/>
      <param type="mixed" variable="$command"/>
      <return type="string"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHandlerMethod" start="307" end="314" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the handler method for the given command."/>
      <param type="mixed" variable="$command"/>
      <return type="string"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
  </method>
  <method name="inflectSegment" start="323" end="334" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the given handler segment for the given command."/>
      <param type="mixed" variable="$command"/>
      <param type="int" variable="$segment"/>
      <return type="string"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="segment" byreference="false" type="{unknown}"/>
  </method>
  <method name="getMappingSegment" start="343" end="346" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the given segment from a given class handler."/>
      <param type="string" variable="$className"/>
      <param type="int" variable="$segment"/>
      <return type="string"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="segment" byreference="false" type="{unknown}"/>
  </method>
  <method name="getMapperSegment" start="355" end="358" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the given segment from a given class handler using the custom mapper."/>
      <param type="mixed" variable="$command"/>
      <param type="int" variable="$segment"/>
      <return type="string"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="segment" byreference="false" type="{unknown}"/>
  </method>
  <method name="maps" start="366" end="369" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register command-to-handler mappings."/>
      <param type="array" variable="$commands"/>
      <return type="object">
        <type full="Illuminate\Bus\void" namespace="Illuminate\Bus" name="void"/>
      </return>
    </docblock>
    <parameter name="commands" byreference="false" type="array"/>
  </method>
  <method name="mapUsing" start="377" end="380" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a fallback mapper callback."/>
      <param type="object" variable="$mapper">
        <type full="\Closure" namespace="" name="Closure"/>
      </param>
      <return type="object">
        <type full="Illuminate\Bus\void" namespace="Illuminate\Bus" name="void"/>
      </return>
    </docblock>
    <parameter name="mapper" byreference="false" type="object">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </method>
  <method name="simpleMapping" start="390" end="395" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Map the command to a handler within a given root namespace."/>
      <param type="mixed" variable="$command"/>
      <param type="string" variable="$commandNamespace"/>
      <param type="string" variable="$handlerNamespace"/>
      <return type="string"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="commandNamespace" byreference="false" type="{unknown}"/>
    <parameter name="handlerNamespace" byreference="false" type="{unknown}"/>
  </method>
  <method name="pipeThrough" start="403" end="408" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the pipes through which commands should be piped before dispatching."/>
      <param type="array" variable="$pipes"/>
      <return type="object">
        <type full="Illuminate\Bus\$this" namespace="Illuminate\Bus" name="$this"/>
      </return>
    </docblock>
    <parameter name="pipes" byreference="false" type="array"/>
  </method>
</class>
