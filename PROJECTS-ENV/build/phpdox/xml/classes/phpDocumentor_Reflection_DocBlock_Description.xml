<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\DocBlock\Description" namespace="phpDocumentor\Reflection\DocBlock" name="Description" abstract="false" final="false" start="51" end="103">
  <file path="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/src/DocBlock" file="Description.php" realpath="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Description.php" size="3472" time="2016-09-30T07:12:33+00:00" unixtime="1475219553" sha1="f149545768a8894ad237f583b4b7b8196d287dd7" relative="freegame_developer/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Description.php"/>
  <docblock>
    <description compact="Object representing to description for a DocBlock.">A Description object can consist of plain text but can also include tags. A Description Formatter can then combine
a body template with sprintf-style placeholders together with formatted tags in order to reconstitute a complete
description text using the format that you would prefer.
Because parsing a Description text can be a verbose process this is handled by the <see xmlns="http://xml.phpdox.net/src" value="DescriptionFactory"/>. It is
thus recommended to use that to create a Description object, like this:
    $description = $descriptionFactory-&gt;create('This is a <see xmlns="http://xml.phpdox.net/src" value="Description"/>', $context);
The description factory will interpret the given body and create a body template and list of tags from them, and pass
that onto the constructor if this class.
&gt; The $context variable is a class of type <see xmlns="http://xml.phpdox.net/src" value="\phpDocumentor\Reflection\Types\Context"/> and contains the namespace
&gt; and the namespace aliases that apply to this DocBlock. These are used by the Factory to resolve and expand partial
&gt; type names and FQSENs.
If you do not want to use the DescriptionFactory you can pass a body template and tag listing like this:
    $description = new Description(
        'This is a %1$s',
        [ new See(new Fqsen('\phpDocumentor\Reflection\DocBlock\Description')) ]
    );
It is generally recommended to use the Factory as that will also apply escaping rules, while the Description object
is mainly responsible for rendering.
</description>
    <see value="DescriptionFactory to create a new Description."/>
    <see value="Description\Formatter for the formatting of the body and tags."/>
  </docblock>
  <member name="bodyTemplate" visibility="private" static="false" line="54">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="tags" visibility="private" static="false" line="57">
    <docblock>
      <var type="array" of="object">
        <type full="phpDocumentor\Reflection\DocBlock\Tag" namespace="phpDocumentor\Reflection\DocBlock" name="Tag"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="65" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initializes a Description with its body (template) and a listing of the tags used in the body template."/>
      <param type="string" variable="$bodyTemplate"/>
      <param type="array" variable="$tags" of="object">
        <type full="phpDocumentor\Reflection\DocBlock\Tag" namespace="phpDocumentor\Reflection\DocBlock" name="Tag"/>
      </param>
    </docblock>
    <parameter name="bodyTemplate" byreference="false" type="{unknown}"/>
    <parameter name="tags" byreference="false" type="array" default=""/>
  </constructor>
  <method name="render" start="81" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Renders this description as a string where the provided formatter will format the tags in the expected string format."/>
      <param type="object" variable="$formatter">
        <type full="phpDocumentor\Reflection\DocBlock\Formatter|null" namespace="phpDocumentor\Reflection\DocBlock" name="Formatter|null"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="formatter" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\DocBlock\Tags\Formatter" namespace="phpDocumentor\Reflection\DocBlock\Tags" name="Formatter"/>
    </parameter>
  </method>
  <method name="__toString" start="99" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a plain string representation of this description."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
