<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Monolog\Handler\HipChatHandler" namespace="Monolog\Handler" name="HipChatHandler" abstract="false" final="false" start="29" end="350">
  <file path="/home/web/example/src/freegame_developer/vendor/monolog/monolog/src/Monolog/Handler" file="HipChatHandler.php" realpath="/home/web/example/src/freegame_developer/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php" size="10347" time="2016-07-29T03:23:52+00:00" unixtime="1469762632" sha1="2176dcfa608f7ef0cd4ee5ed23ea3ea37358066d" relative="freegame_developer/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php"/>
  <docblock>
    <description compact="Sends notifications through the hipchat api to a hipchat room">Notes:
API token - HipChat API token
Room      - HipChat Room Id or name, where messages are sent
Name      - Name used to send the message (from)
notify    - Should the message trigger a notification in the clients
version   - The API version to use (HipChatHandler::API_V1 | HipChatHandler::API_V2)</description>
    <author value="Rafael Dohms &lt;rafael@doh.ms&gt;"/>
    <see value="https://www.hipchat.com/docs/api"/>
  </docblock>
  <extends full="Monolog\Handler\SocketHandler" namespace="Monolog\Handler" name="SocketHandler"/>
  <constant type="string" name="API_V1" value="'v1'">
    <docblock>
      <description compact="Use API version 1"/>
    </docblock>
  </constant>
  <constant type="string" name="API_V2" value="'v2'">
    <docblock>
      <description compact="Use API version v2"/>
    </docblock>
  </constant>
  <constant type="integer" name="MAXIMUM_NAME_LENGTH" value="15">
    <docblock>
      <description compact="The maximum allowed length for the name used in the &quot;from&quot; field."/>
    </docblock>
  </constant>
  <constant type="integer" name="MAXIMUM_MESSAGE_LENGTH" value="9500">
    <docblock>
      <description compact="The maximum allowed length for the message."/>
    </docblock>
  </constant>
  <member name="token" visibility="private" static="false" line="54">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="room" visibility="private" static="false" line="59">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="name" visibility="private" static="false" line="64">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="notify" visibility="private" static="false" line="69">
    <docblock>
      <description/>
      <var type="object">
        <type full="Monolog\Handler\bool" namespace="Monolog\Handler" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="format" visibility="private" static="false" line="74">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="host" visibility="private" static="false" line="79">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="version" visibility="private" static="false" line="84">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="98" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="HipChat API Token" type="string" variable="$token"/>
      <param description="The room that should be alerted of the message (Id or Name)" type="string" variable="$room"/>
      <param description="Name used in the &quot;from&quot; field." type="string" variable="$name"/>
      <param description="Trigger a notification in clients or not" type="object" variable="$notify">
        <type full="Monolog\Handler\bool" namespace="Monolog\Handler" name="bool"/>
      </param>
      <param description="The minimum logging level at which this handler will be triggered" type="int" variable="$level"/>
      <param description="Whether the messages that are handled can bubble up the stack or not" type="object" variable="$bubble">
        <type full="Monolog\Handler\bool" namespace="Monolog\Handler" name="bool"/>
      </param>
      <param description="Whether to connect via SSL." type="object" variable="$useSSL">
        <type full="Monolog\Handler\bool" namespace="Monolog\Handler" name="bool"/>
      </param>
      <param description="The format of the messages (default to text, can be set to html if you have html in the messages)" type="string" variable="$format"/>
      <param description="The HipChat server hostname." type="string" variable="$host"/>
      <param description="The HipChat API version (default HipChatHandler::API_V1)" type="string" variable="$version"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
    <parameter name="room" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="string" default="'Monolog'"/>
    <parameter name="notify" byreference="false" type="boolean" default="false"/>
    <parameter name="level" byreference="false" type="{unknown}" default="" constant="Logger::CRITICAL"/>
    <parameter name="bubble" byreference="false" type="boolean" default="true"/>
    <parameter name="useSSL" byreference="false" type="boolean" default="true"/>
    <parameter name="format" byreference="false" type="string" default="'text'"/>
    <parameter name="host" byreference="false" type="string" default="'api.hipchat.com'"/>
    <parameter name="version" byreference="false" type="{unknown}" default="" constant="self::API_V1"/>
  </constructor>
  <method name="generateDataStream" start="122" end="127" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="{@inheritdoc}"/>
      <param type="array" variable="$record"/>
      <return type="string"/>
    </docblock>
    <parameter name="record" byreference="false" type="{unknown}"/>
  </method>
  <method name="buildContent" start="135" end="166" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Builds the body of API call"/>
      <param type="array" variable="$record"/>
      <return type="string"/>
    </docblock>
    <parameter name="record" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="if we are using the legacy API then we need to send some additional information" line="154"/>
      <comment value="append the sender name if it is set" line="159"/>
      <comment value="always append it if we use the v1 api (it is required in v1)" line="160"/>
    </inline>
  </method>
  <method name="buildHeader" start="174" end="190" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Builds the header of the API Call"/>
      <param type="string" variable="$content"/>
      <return type="string"/>
    </docblock>
    <parameter name="content" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAlertColor" start="198" end="212" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Assigns a color to each level of log records."/>
      <param type="int" variable="$level"/>
      <return type="string"/>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="write" start="219" end="223" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="{@inheritdoc}"/>
      <param type="array" variable="$record"/>
    </docblock>
    <parameter name="record" byreference="false" type="array"/>
  </method>
  <method name="handleBatch" start="228" end="249" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="records" byreference="false" type="array"/>
  </method>
  <method name="combineRecords" start="259" end="325" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Combines multiple records into one. Error level of the combined record will be the highest level from the given records. Datetime will be taken from the first record."/>
      <param variable="$records"/>
      <return type="array"/>
    </docblock>
    <parameter name="records" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Set the max level and datetime for all records" line="312"/>
    </inline>
  </method>
  <method name="validateStringLength" start="342" end="349" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Validates the length of a string.">If the `mb_strlen()` function is available, it will use that, as HipChat
allows UTF-8 characters. Otherwise, it will fall back to `strlen()`.

Note that this might cause false failures in the specific case of using
a valid name with less than 16 characters, but 16 or more bytes, on a
system where `mb_strlen()` is unavailable.</description>
      <param type="string" variable="$str"/>
      <param type="int" variable="$length"/>
      <return type="object">
        <type full="Monolog\Handler\bool" namespace="Monolog\Handler" name="bool"/>
      </return>
    </docblock>
    <parameter name="str" byreference="false" type="{unknown}"/>
    <parameter name="length" byreference="false" type="{unknown}"/>
  </method>
</class>
