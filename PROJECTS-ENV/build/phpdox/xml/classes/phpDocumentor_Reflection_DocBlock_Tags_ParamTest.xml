<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\DocBlock\Tags\ParamTest" namespace="phpDocumentor\Reflection\DocBlock\Tags" name="ParamTest" abstract="false" final="false" start="26" end="228">
  <file path="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/tests/unit/DocBlock/Tags" file="ParamTest.php" realpath="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/tests/unit/DocBlock/Tags/ParamTest.php" size="7533" time="2016-09-30T07:12:33+00:00" unixtime="1475219553" sha1="dc1d3b7c9231b6bc063108ba23a36a493c74957d" relative="freegame_developer/vendor/phpdocumentor/reflection-docblock/tests/unit/DocBlock/Tags/ParamTest.php"/>
  <docblock>
    <description/>
    <coversdefaultclass value="\phpDocumentor\Reflection\DocBlock\Tags\Param"/>
    <covers value="::&lt;private&gt;"/>
  </docblock>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="testIfCorrectTagNameIsReturned" start="33" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::__construct"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Description"/>
      <covers value="\phpDocumentor\Reflection\DocBlock\Tags\BaseTag::getName"/>
    </docblock>
  </method>
  <method name="testIfTagCanBeRenderedUsingDefaultFormatter" start="49" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::__construct"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::isVariadic"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::__toString"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Formatter\PassthroughFormatter"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Description"/>
      <covers value="\phpDocumentor\Reflection\DocBlock\Tags\BaseTag::render"/>
      <covers value="\phpDocumentor\Reflection\DocBlock\Tags\BaseTag::getName"/>
    </docblock>
  </method>
  <method name="testIfTagCanBeRenderedUsingSpecificFormatter" start="68" end="76" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::__construct"/>
      <covers value="\phpDocumentor\Reflection\DocBlock\Tags\BaseTag::render"/>
    </docblock>
  </method>
  <method name="testHasVariableName" start="82" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <covers value="::getVariableName"/>
    </docblock>
  </method>
  <method name="testHasType" start="95" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <covers value="::getType"/>
    </docblock>
  </method>
  <method name="testIfParameterIsVariadic" start="108" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <covers value="::isVariadic"/>
    </docblock>
  </method>
  <method name="testHasDescription" start="122" end="129" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <covers value="\phpDocumentor\Reflection\DocBlock\Tags\BaseTag::getDescription"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Description"/>
    </docblock>
  </method>
  <method name="testStringRepresentationIsReturned" start="138" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <covers value="::isVariadic"/>
      <covers value="::__toString"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Description"/>
      <uses value="\phpDocumentor\Reflection\Types\String_"/>
    </docblock>
  </method>
  <method name="testFactoryMethod" start="152" end="168" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::create"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::&lt;public&gt;"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\DescriptionFactory"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Description"/>
      <uses value="\phpDocumentor\Reflection\Types\Context"/>
    </docblock>
  </method>
  <method name="testFactoryMethodFailsIfEmptyBodyIsGiven" start="177" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::create"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\Tags\Param::&lt;public&gt;"/>
      <uses value="\phpDocumentor\Reflection\TypeResolver"/>
      <uses value="\phpDocumentor\Reflection\DocBlock\DescriptionFactory"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFactoryMethodFailsIfBodyIsNotString" start="187" end="190" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::create"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFactoryMethodFailsIfResolverIsNull" start="196" end="199" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::create"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFactoryMethodFailsIfDescriptionFactoryIsNull" start="206" end="209" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::create"/>
      <uses value="\phpDocumentor\Reflection\TypeResolver"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testExceptionIsThrownIfVariableNameIsNotString" start="215" end="218" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testExceptionIsThrownIfVariadicIsNotBoolean" start="224" end="227" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="::__construct"/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
</class>
