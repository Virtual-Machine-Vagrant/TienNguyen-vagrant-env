<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PSR2_Sniffs_Methods_FunctionCallSignatureSniff" namespace="" name="PSR2_Sniffs_Methods_FunctionCallSignatureSniff" abstract="false" final="false" start="26" end="89">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Methods" file="FunctionCallSignatureSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Methods/FunctionCallSignatureSniff.php" size="3280" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="e1db0f12734cab9037d65abfb02b19adc7ba5d81" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Methods/FunctionCallSignatureSniff.php"/>
  <docblock>
    <description compact="PSR2_Sniffs_Methods_FunctionCallSignatureSniff."/>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <extends full="PEAR_Sniffs_Functions_FunctionCallSignatureSniff" namespace="" name="PEAR_Sniffs_Functions_FunctionCallSignatureSniff"/>
  <member name="allowMultipleArguments" type="boolean" default="false" visibility="public" static="false" line="34">
    <docblock>
      <description compact="If TRUE, multiple arguments can be defined per line in a multi-line call."/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <method name="isMultiLineCall" start="50" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes single-line calls."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <param description="The position of the opening bracket" type="int" variable="$openBracket">in the stack passed in $tokens.</param>
      <param description="The stack of tokens that make up" type="array" variable="$tokens">the file.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <parameter name="openBracket" byreference="false" type="{unknown}"/>
    <parameter name="tokens" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If the first argument is on a new line, this is a multi-line" line="52"/>
      <comment value="function call, even if there is only one argument." line="53"/>
      <comment value="We've reached the last argument, so see if the next content" line="77"/>
      <comment value="(should be the close bracket) is also on the same line." line="78"/>
    </inline>
  </method>
</class>
