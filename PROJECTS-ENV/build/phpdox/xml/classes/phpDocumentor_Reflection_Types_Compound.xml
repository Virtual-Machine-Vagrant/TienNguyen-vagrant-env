<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\Types\Compound" namespace="phpDocumentor\Reflection\Types" name="Compound" abstract="false" final="true" start="24" end="82">
  <file path="/home/web/example/src/freegame_developer/vendor/phpdocumentor/type-resolver/src/Types" file="Compound.php" realpath="/home/web/example/src/freegame_developer/vendor/phpdocumentor/type-resolver/src/Types/Compound.php" size="2061" time="2016-06-10T07:14:17+00:00" unixtime="1465542857" sha1="bbb869772fecda50951d847d998f694d129f2042" relative="freegame_developer/vendor/phpdocumentor/type-resolver/src/Types/Compound.php"/>
  <docblock>
    <description compact="Value Object representing a Compound Type.">A Compound Type is not so much a special keyword or object reference but is a series of Types that are separated
using an OR operator (`|`). This combination of types signifies that whatever is associated with this compound type
may contain a value with any of the given types.</description>
  </docblock>
  <implements full="phpDocumentor\Reflection\Type" namespace="phpDocumentor\Reflection" name="Type"/>
  <member name="types" type="array" default="" visibility="private" static="false" line="27">
    <docblock>
      <var type="array" of="object">
        <type full="phpDocumentor\Reflection\Types\Type" namespace="phpDocumentor\Reflection\Types" name="Type"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="34" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initializes a compound type (i.e. `string|int`) and tests if the provided types all implement the Type interface."/>
      <param type="array" variable="$types" of="object">
        <type full="phpDocumentor\Reflection\Types\Type" namespace="phpDocumentor\Reflection\Types" name="Type"/>
      </param>
    </docblock>
    <parameter name="types" byreference="false" type="array"/>
  </constructor>
  <method name="get" start="52" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the type at the given index."/>
      <param type="integer" variable="$index"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\Types\Type|null" namespace="phpDocumentor\Reflection\Types" name="Type|null"/>
      </return>
    </docblock>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="has" start="68" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tests if this compound type has a type with the given index."/>
      <param type="integer" variable="$index"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\Types\bool" namespace="phpDocumentor\Reflection\Types" name="bool"/>
      </return>
    </docblock>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="__toString" start="78" end="81" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a rendered output of the Type as it would be used in a DocBlock."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
