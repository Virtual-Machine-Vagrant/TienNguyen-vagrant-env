<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PSR2_Sniffs_Classes_ClassDeclarationSniff" namespace="" name="PSR2_Sniffs_Classes_ClassDeclarationSniff" abstract="false" final="false" start="33" end="453">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Classes" file="ClassDeclarationSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Classes/ClassDeclarationSniff.php" size="20102" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="5859c658cd0e8ff1b447ff83cfb5ec4e31b7b477" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/PSR2/Sniffs/Classes/ClassDeclarationSniff.php"/>
  <docblock>
    <description compact="Class Declaration Test.">Checks the declaration of the class and its inheritance is correct.</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <extends full="PEAR_Sniffs_Classes_ClassDeclarationSniff" namespace="" name="PEAR_Sniffs_Classes_ClassDeclarationSniff"/>
  <method name="process" start="46" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="We want all the errors from the PEAR standard, plus some of our own." line="48"/>
      <comment value="Just in case." line="51"/>
    </inline>
  </method>
  <method name="processOpen" start="72" end="398" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes the opening section of a class declaration."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Check alignment of the keyword and braces." line="77"/>
      <comment value="end if" line="115"/>
      <comment value="We'll need the indent of the class/interface declaration for later." line="117"/>
      <comment value="Spacing of the keyword." line="134"/>
      <comment value="Check after the class/interface name." line="151"/>
      <comment value="Check positions of the extends and implements keywords." line="171"/>
      <comment value="end foreach" line="205"/>
      <comment value="Check each of the extends/implements class names. If the extends/implements" line="207"/>
      <comment value="keyword is the last content on the line, it means we need to check for" line="208"/>
      <comment value="the multi-line format, so we do not include the class names" line="209"/>
      <comment value="from the extends/implements list in the following check." line="210"/>
      <comment value="Note that classes can only extend one other class, so they can't use a" line="211"/>
      <comment value="multi-line extends format, whereas an interface can extend multiple" line="212"/>
      <comment value="other interfaces, and so uses a multi-line extends format." line="213"/>
      <comment value="end foreach" line="396"/>
    </inline>
  </method>
  <method name="processClose" start="410" end="450" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes the closing section of a class declaration."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Check that the closing brace comes right after the code body." line="414"/>
      <comment value="end if" line="436"/>
      <comment value="Check the closing brace is on it's own line, but allow" line="438"/>
      <comment value="for comments like &quot;//end class&quot;." line="439"/>
    </inline>
  </method>
</class>
