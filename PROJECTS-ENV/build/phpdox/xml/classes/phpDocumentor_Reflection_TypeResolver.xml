<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\TypeResolver" namespace="phpDocumentor\Reflection" name="TypeResolver" abstract="false" final="true" start="20" end="266">
  <file path="/home/web/example/src/freegame_developer/vendor/phpdocumentor/type-resolver/src" file="TypeResolver.php" realpath="/home/web/example/src/freegame_developer/vendor/phpdocumentor/type-resolver/src/TypeResolver.php" size="8862" time="2016-06-10T07:14:17+00:00" unixtime="1465542857" sha1="aea5ebd6c26818e2b75f5e63290b4c79edcc984f" relative="freegame_developer/vendor/phpdocumentor/type-resolver/src/TypeResolver.php"/>
  <constant type="string" name="OPERATOR_ARRAY" value="'[]'">
    <docblock>
      <var description="Definition of the ARRAY operator for types" type="string"/>
    </docblock>
  </constant>
  <constant type="string" name="OPERATOR_NAMESPACE" value="'\\'">
    <docblock>
      <var description="Definition of the NAMESPACE operator in PHP" type="string"/>
    </docblock>
  </constant>
  <member name="keywords" type="array" default="" visibility="private" static="false" line="29">
    <docblock>
      <var description="List of recognized keywords and unto which Value Object they map" type="array" of="object">
        <type full="phpDocumentor\Reflection\string" namespace="phpDocumentor\Reflection" name="string"/>
      </var>
    </docblock>
  </member>
  <member name="fqsenResolver" visibility="private" static="false" line="54">
    <docblock>
      <var type="object">
        <type full="phpDocumentor\Reflection\FqsenResolver" namespace="phpDocumentor\Reflection" name="FqsenResolver"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="61" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initializes this TypeResolver with the means to create and resolve Fqsen objects."/>
      <param type="object" variable="$fqsenResolver">
        <type full="phpDocumentor\Reflection\FqsenResolver" namespace="phpDocumentor\Reflection" name="FqsenResolver"/>
      </param>
    </docblock>
    <parameter name="fqsenResolver" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\FqsenResolver" namespace="phpDocumentor\Reflection" name="FqsenResolver"/>
    </parameter>
  </constructor>
  <method name="resolve" start="85" end="121" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Analyzes the given type and returns the FQCN variant.">When a type is provided this method checks whether it is not a keyword or
Fully Qualified Class Name. If so it will use the given namespace and
aliases to expand the type to a FQCN representation.

This method only works as expected if the namespace and aliases are set;
no dynamic reflection is being performed here.</description>
      <param description="The relative or absolute type." type="string" variable="$type"/>
      <param type="object" variable="$context">
        <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
      </param>
      <uses value="Context::getNamespace()        to determine with what to prefix the type name."/>
      <uses value="Context::getNamespaceAliases() to check whether the first part of the relative type name should not be">replaced with another namespace.</uses>
      <return type="object">
        <type full="phpDocumentor\Reflection\Type|null" namespace="phpDocumentor\Reflection" name="Type|null"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
    </parameter>
    <inline>
      <comment value="@codeCoverageIgnoreEnd" line="120"/>
    </inline>
  </method>
  <method name="addKeyword" start="131" end="147" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a keyword to the list of Keywords and associates it with a specific Value Object."/>
      <param type="string" variable="$keyword"/>
      <param type="string" variable="$typeClassName"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
    <parameter name="keyword" byreference="false" type="{unknown}"/>
    <parameter name="typeClassName" byreference="false" type="{unknown}"/>
  </method>
  <method name="isTypedArray" start="156" end="159" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Detects whether the given type represents an array."/>
      <param description="A relative or absolute type as defined in the phpDocumentor documentation." type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isKeyword" start="168" end="171" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Detects whether the given type represents a PHPDoc keyword."/>
      <param description="A relative or absolute type as defined in the phpDocumentor documentation." type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isPartialStructuralElementName" start="180" end="183" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Detects whether the given type represents a relative structural element name."/>
      <param description="A relative or absolute type as defined in the phpDocumentor documentation." type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isFqsen" start="192" end="195" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Tests whether the given type is a Fully Qualified Structural Element Name."/>
      <param type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isCompoundType" start="204" end="207" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Tests whether the given type is a compound type (i.e. `string|int`)."/>
      <param type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="resolveTypedArray" start="217" end="220" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Resolves the given typed array string (i.e. `string[]`) into an Array object with the right types set."/>
      <param type="string" variable="$type"/>
      <param type="object" variable="$context">
        <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
      </param>
      <return type="object">
        <type full="phpDocumentor\Reflection\Types\Array_" namespace="phpDocumentor\Reflection\Types" name="Array_"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="object">
      <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
    </parameter>
  </method>
  <method name="resolveKeyword" start="229" end="234" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Resolves the given keyword (such as `string`) into a Type object representing that keyword."/>
      <param type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\Type" namespace="phpDocumentor\Reflection" name="Type"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="resolveTypedObject" start="243" end="246" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Resolves the given FQSEN string into an FQSEN object."/>
      <param type="string" variable="$type"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\Types\Object_" namespace="phpDocumentor\Reflection\Types" name="Object_"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
    </parameter>
  </method>
  <method name="resolveCompoundType" start="256" end="265" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Resolves a compound type (i.e. `string|int`) into the appropriate Type objects or FQSEN."/>
      <param type="string" variable="$type"/>
      <param type="object" variable="$context">
        <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
      </param>
      <return type="object">
        <type full="phpDocumentor\Reflection\Types\Compound" namespace="phpDocumentor\Reflection\Types" name="Compound"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="object">
      <type full="phpDocumentor\Reflection\Types\Context" namespace="phpDocumentor\Reflection\Types" name="Context"/>
    </parameter>
  </method>
</class>
