<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount" namespace="" name="PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount" abstract="false" final="false" start="17" end="57">
  <file path="/home/web/example/src/freegame_developer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher" file="InvokedAtLeastCount.php" realpath="/home/web/example/src/freegame_developer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/InvokedAtLeastCount.php" size="1532" time="2015-10-02T06:51:40+00:00" unixtime="1443768700" sha1="87ac7d00f2257351429720ebe6a958165186d3f9" relative="freegame_developer/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/InvokedAtLeastCount.php"/>
  <docblock>
    <description compact="Invocation matcher which checks if a method has been invoked at least N times."/>
    <since value="Class available since Release 2.2.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_MockObject_Matcher_InvokedRecorder" namespace="" name="PHPUnit_Framework_MockObject_Matcher_InvokedRecorder"/>
  <member name="requiredInvocations" visibility="private" static="false" line="22">
    <docblock>
      <description/>
      <var type="int"/>
    </docblock>
  </member>
  <constructor name="__construct" start="27" end="30" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="int" variable="$requiredInvocations"/>
    </docblock>
    <parameter name="requiredInvocations" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="toString" start="35" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="verify" start="46" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verifies that the current expectation is valid. If everything is OK the code should just return, if not it must throw an exception."/>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
  </method>
</class>
