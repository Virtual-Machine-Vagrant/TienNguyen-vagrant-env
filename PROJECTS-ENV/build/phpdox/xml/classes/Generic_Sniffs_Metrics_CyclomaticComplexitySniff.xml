<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Generic_Sniffs_Metrics_CyclomaticComplexitySniff" namespace="" name="Generic_Sniffs_Metrics_CyclomaticComplexitySniff" abstract="false" final="false" start="32" end="127">
  <file path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/Metrics" file="CyclomaticComplexitySniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/Metrics/CyclomaticComplexitySniff.php" size="3916" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="17403164bfe0116571a3b0bfec55826ce88a2b09" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Generic/Sniffs/Metrics/CyclomaticComplexitySniff.php"/>
  <docblock>
    <description compact="Checks the cyclomatic complexity (McCabe) for functions.">The cyclomatic complexity (also called McCabe code metrics)
indicates the complexity within a function by counting
the different paths the function includes.</description>
    <category value="PHP"/>
    <package value="PHP_CodeSniffer"/>
    <author value="Johann-Peter Hartmann &lt;hartmann@mayflower.de&gt;"/>
    <author value="Greg Sherwood &lt;gsherwood@squiz.net&gt;"/>
    <copyright value="2007-2014 Mayflower GmbH"/>
    <license name="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence"/>
    <version value="Release: @package_version@"/>
    <link value="http://pear.php.net/package/PHP_CodeSniffer"/>
  </docblock>
  <implements full="PHP_CodeSniffer_Sniff" namespace="" name="PHP_CodeSniffer_Sniff"/>
  <member name="complexity" type="integer" default="10" visibility="public" static="false" line="40">
    <docblock>
      <description compact="A complexity higher than this value will throw a warning."/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="absoluteComplexity" type="integer" default="20" visibility="public" static="false" line="47">
    <docblock>
      <description compact="A complexity higer than this value will throw an error."/>
      <var type="int"/>
    </docblock>
  </member>
  <method name="register" start="55" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tokens this test wants to listen for."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="process" start="71" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Processes this test, when one of its tokens is encountered."/>
      <param description="The file being scanned." type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
      </param>
      <param description="The position of the current token" type="int" variable="$stackPtr">in the stack passed in $tokens.</param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer_File" namespace="" name="PHP_CodeSniffer_File"/>
    </parameter>
    <parameter name="stackPtr" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Ignore abstract methods." line="77"/>
      <comment value="Detect start and end of this function definition." line="82"/>
      <comment value="Predicate nodes for PHP." line="86"/>
      <comment value="Iterate from start to end and count predicate nodes." line="101"/>
    </inline>
  </method>
</class>
