<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpKernel\Tests\KernelTest" namespace="Symfony\Component\HttpKernel\Tests" name="KernelTest" abstract="false" final="false" start="25" end="845">
  <file path="/home/web/example/src/freegame_developer/vendor/symfony/http-kernel/Tests" file="KernelTest.php" realpath="/home/web/example/src/freegame_developer/vendor/symfony/http-kernel/Tests/KernelTest.php" size="28039" time="2016-10-27T01:37:19+00:00" unixtime="1477532239" sha1="05b592e32b8ba0baa46a887c7edba0fbc4f680f8" relative="freegame_developer/vendor/symfony/http-kernel/Tests/KernelTest.php"/>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="testConstructor" start="27" end="38" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClone" start="40" end="53" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBootInitializesBundlesAndContainer" start="55" end="64" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBootSetsTheContainerToTheBundles" start="66" end="78" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBootSetsTheBootedFlagToTrue" start="80" end="87" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="use test kernel to access isBooted()" line="82"/>
    </inline>
  </method>
  <method name="testClassCacheIsLoaded" start="89" end="98" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassCacheIsNotLoadedByDefault" start="100" end="107" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassCacheIsNotLoadedWhenKernelIsNotBooted" start="109" end="115" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testEnvParametersResourceIsAdded" start="117" end="151" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBootKernelSeveralTimesOnlyInitializesBundlesOnce" start="153" end="161" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShutdownCallsShutdownOnAllBundles" start="163" end="173" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShutdownGivesNullContainerToAllBundles" start="175" end="189" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHandleCallsHandleOnHttpKernel" start="191" end="211" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHandleBootsTheKernel" start="213" end="232" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testStripComments" start="234" end="314" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="Heredocs are preserved, making the output mixing Unix and Windows line" line="306"/>
      <comment value="endings, switching to &quot;\n&quot; everywhere on Windows to avoid failure." line="307"/>
    </inline>
  </method>
  <method name="testLegacyIsClassInActiveBundleFalse" start="319" end="324" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="legacy"/>
    </docblock>
  </method>
  <method name="testLegacyIsClassInActiveBundleFalseNoNamespace" start="329" end="334" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="legacy"/>
    </docblock>
  </method>
  <method name="testLegacyIsClassInActiveBundleTrue" start="339" end="344" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="legacy"/>
    </docblock>
  </method>
  <method name="getKernelMockForIsClassInActiveBundleTest" start="346" end="356" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testGetRootDir" start="358" end="363" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetName" start="365" end="370" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOverrideGetName" start="372" end="377" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSerialize" start="379" end="387" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceThrowsExceptionWhenNameIsNotValid" start="392" end="395" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testLocateResourceThrowsExceptionWhenNameIsUnsafe" start="400" end="403" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\RuntimeException"/>
    </docblock>
  </method>
  <method name="testLocateResourceThrowsExceptionWhenBundleDoesNotExist" start="408" end="411" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testLocateResourceThrowsExceptionWhenResourceDoesNotExist" start="416" end="426" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testLocateResourceReturnsTheFirstThatMatches" start="428" end="438" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceReturnsTheFirstThatMatchesWithParent" start="440" end="454" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceReturnsAllMatches" start="456" end="472" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceReturnsAllMatchesBis" start="474" end="490" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceIgnoresDirOnNonResource" start="492" end="505" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceReturnsTheDirOneForResources" start="507" end="520" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceReturnsTheDirOneForResourcesAndBundleOnes" start="522" end="536" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceOverrideBundleAndResourcesFolders" start="538" end="574" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLocateResourceOnDirectories" start="576" end="609" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInitializeBundles" start="611" end="627" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="use test kernel so we can access getBundleMap()" line="616"/>
    </inline>
  </method>
  <method name="testInitializeBundlesSupportInheritanceCascade" start="629" end="648" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="use test kernel so we can access getBundleMap()" line="635"/>
    </inline>
  </method>
  <method name="testInitializeBundlesThrowsExceptionWhenAParentDoesNotExists" start="654" end="659" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\LogicException"/>
      <expectedexceptionmessage value="Bundle &quot;ChildCBundle&quot; extends bundle &quot;FooBar&quot;, which is not registered."/>
    </docblock>
  </method>
  <method name="testInitializeBundlesSupportsArbitraryBundleRegistrationOrder" start="661" end="680" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="use test kernel so we can access getBundleMap()" line="667"/>
    </inline>
  </method>
  <method name="testInitializeBundlesThrowsExceptionWhenABundleIsDirectlyExtendedByTwoBundles" start="686" end="694" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\LogicException"/>
      <expectedexceptionmessage value="Bundle &quot;ParentCBundle&quot; is directly extended by two bundles &quot;ChildC2Bundle&quot; and &quot;ChildC1Bundle&quot;."/>
    </docblock>
  </method>
  <method name="testInitializeBundleThrowsExceptionWhenRegisteringTwoBundlesWithTheSameName" start="700" end="707" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\LogicException"/>
      <expectedexceptionmessage value="Trying to register two bundles with the same name &quot;DuplicateName&quot;"/>
    </docblock>
  </method>
  <method name="testInitializeBundleThrowsExceptionWhenABundleExtendsItself" start="713" end="719" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\LogicException"/>
      <expectedexceptionmessage value="Bundle &quot;CircularRefBundle&quot; can not extend itself."/>
    </docblock>
  </method>
  <method name="testTerminateReturnsSilentlyIfKernelIsNotBooted" start="721" end="728" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testTerminateDelegatesTerminationOnlyForTerminableInterface" start="730" end="762" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="does not implement TerminableInterface" line="732"/>
      <comment value="implements TerminableInterface" line="745"/>
    </inline>
  </method>
  <method name="getBundle" start="769" end="802" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns a mock for the BundleInterface."/>
      <return type="object">
        <type full="Symfony\Component\HttpKernel\Bundle\BundleInterface" namespace="Symfony\Component\HttpKernel\Bundle" name="BundleInterface"/>
      </return>
    </docblock>
    <parameter name="dir" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="parent" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="className" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="bundleName" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getKernel" start="812" end="831" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns a mock for the abstract kernel."/>
      <param description="Additional methods to mock (besides the abstract ones)" type="array" variable="$methods"/>
      <param description="Bundles to register" type="array" variable="$bundles"/>
      <return type="object">
        <type full="Symfony\Component\HttpKernel\Kernel" namespace="Symfony\Component\HttpKernel" name="Kernel"/>
      </return>
    </docblock>
    <parameter name="methods" byreference="false" type="array" default=""/>
    <parameter name="bundles" byreference="false" type="array" default=""/>
  </method>
  <method name="getKernelForTest" start="833" end="844" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="methods" byreference="false" type="array" default=""/>
  </method>
</class>
