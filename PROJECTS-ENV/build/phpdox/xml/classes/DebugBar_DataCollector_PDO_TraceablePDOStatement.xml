<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="DebugBar\DataCollector\PDO\TraceablePDOStatement" namespace="DebugBar\DataCollector\PDO" name="TraceablePDOStatement" abstract="false" final="false" start="12" end="129">
  <file path="/home/web/example/src/freegame_developer/vendor/maximebf/debugbar/src/DebugBar/DataCollector/PDO" file="TraceablePDOStatement.php" realpath="/home/web/example/src/freegame_developer/vendor/maximebf/debugbar/src/DebugBar/DataCollector/PDO/TraceablePDOStatement.php" size="5083" time="2016-09-15T14:01:59+00:00" unixtime="1473948119" sha1="127c7a6d00bba185964e77b678ebf816f07f1c9a" relative="freegame_developer/vendor/maximebf/debugbar/src/DebugBar/DataCollector/PDO/TraceablePDOStatement.php"/>
  <docblock>
    <description compact="A traceable PDO statement to use with Traceablepdo"/>
  </docblock>
  <extends full="PDOStatement" namespace="" name="PDOStatement"/>
  <member name="pdo" visibility="protected" static="false" line="15">
    <docblock>
      <var type="object">
        <type full="PDO" namespace="" name="PDO"/>
      </var>
    </docblock>
  </member>
  <member name="boundParameters" type="array" default="" visibility="protected" static="false" line="18">
    <docblock>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="25" end="28" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="TraceablePDOStatement constructor."/>
      <param type="object" variable="$pdo">
        <type full="DebugBar\DataCollector\PDO\TraceablePDO" namespace="DebugBar\DataCollector\PDO" name="TraceablePDO"/>
      </param>
    </docblock>
    <parameter name="pdo" byreference="false" type="object">
      <type full="DebugBar\DataCollector\PDO\TraceablePDO" namespace="DebugBar\DataCollector\PDO" name="TraceablePDO"/>
    </parameter>
  </constructor>
  <method name="bindColumn" start="42" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Bind a column to a PHP variable"/>
      <link value="http://php.net/manual/en/pdostatement.bindcolumn.php"/>
      <param description="Number of the column (1-indexed) or name of the column in the result set" type="mixed" variable="$column"/>
      <param description="Name of the PHP variable to which the column will be bound." type="mixed" variable="$param"/>
      <param description="[optional] Data type of the parameter, specified by the PDO::PARAM_" type="int" variable="$type">constants.</param>
      <param description="[optional] A hint for pre-allocation." type="int" variable="$maxlen"/>
      <param description="[optional] Optional parameter(s) for the driver." type="mixed" variable="$driverdata"/>
      <return description="TRUE on success or FALSE on failure." type="object">
        <type full="DebugBar\DataCollector\PDO\bool" namespace="DebugBar\DataCollector\PDO" name="bool"/>
      </return>
    </docblock>
    <parameter name="column" byreference="false" type="{unknown}"/>
    <parameter name="param" byreference="true" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="maxlen" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="driverdata" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="bindParam" start="64" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Binds a parameter to the specified variable name"/>
      <link value="http://php.net/manual/en/pdostatement.bindparam.php"/>
      <param description="Parameter identifier. For a prepared statement using named" type="mixed" variable="$parameter">placeholders, this will be a parameter name of the form :name. For a prepared statement using
question mark placeholders, this will be the 1-indexed position of the parameter.</param>
      <param description="Name of the PHP variable to bind to the SQL statement parameter." type="mixed" variable="$variable"/>
      <param description="[optional] Explicit data type for the parameter using the PDO::PARAM_" type="int" variable="$data_type">constants.</param>
      <param description="[optional] Length of the data type. To indicate that a parameter is an OUT" type="int" variable="$length">parameter from a stored procedure, you must explicitly set the length.</param>
      <param description="[optional]" type="mixed" variable="$driver_options"/>
      <return description="TRUE on success or FALSE on failure." type="object">
        <type full="DebugBar\DataCollector\PDO\bool" namespace="DebugBar\DataCollector\PDO" name="bool"/>
      </return>
    </docblock>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
    <parameter name="variable" byreference="true" type="{unknown}"/>
    <parameter name="data_type" byreference="false" type="{unknown}" default="" constant="PDO::PARAM_STR"/>
    <parameter name="length" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="driver_options" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="bindValue" start="83" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Binds a value to a parameter"/>
      <link value="http://php.net/manual/en/pdostatement.bindvalue.php"/>
      <param description="Parameter identifier. For a prepared statement using named" type="mixed" variable="$parameter">placeholders, this will be a parameter name of the form :name. For a prepared statement using
question mark placeholders, this will be the 1-indexed position of the parameter.</param>
      <param description="The value to bind to the parameter." type="mixed" variable="$value"/>
      <param description="[optional] Explicit data type for the parameter using the PDO::PARAM_" type="int" variable="$data_type">constants.</param>
      <return description="TRUE on success or FALSE on failure." type="object">
        <type full="DebugBar\DataCollector\PDO\bool" namespace="DebugBar\DataCollector\PDO" name="bool"/>
      </return>
    </docblock>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="data_type" byreference="false" type="{unknown}" default="" constant="PDO::PARAM_STR"/>
  </method>
  <method name="execute" start="98" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Executes a prepared statement"/>
      <link value="http://php.net/manual/en/pdostatement.execute.php"/>
      <param description="[optional] An array of values with as many elements as there" type="array" variable="$input_parameters">are bound parameters in the SQL statement being executed. All values are treated as
PDO::PARAM_STR.</param>
      <return description="TRUE on success or FALSE on failure." type="object">
        <type full="DebugBar\DataCollector\PDO\bool" namespace="DebugBar\DataCollector\PDO" name="bool"/>
      </return>
    </docblock>
    <parameter name="input_parameters" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
</class>
