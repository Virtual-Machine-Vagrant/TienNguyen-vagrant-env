<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/web/example/src/freegame_developer/vendor/paragonie/random_compat/lib" file="cast_to_int.php" realpath="/home/web/example/src/freegame_developer/vendor/paragonie/random_compat/lib/cast_to_int.php" size="2461" time="2016-03-18T20:34:03+00:00" unixtime="1458333243" sha1="6a465dba45b1d57b2b109ac3e77c11bb5ae46bc3" relative="freegame_developer/vendor/paragonie/random_compat/lib/cast_to_int.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Random_* Compatibility Library</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * for using the new PHP 7 random_* API in PHP 5 projects</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * The MIT License (MIT)</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * Copyright (c) 2015 Paragon Initiative Enterprises</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * Permission is hereby granted, free of charge, to any person obtaining a copy</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * of this software and associated documentation files (the "Software"), to deal</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * in the Software without restriction, including without limitation the rights</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * copies of the Software, and to permit persons to whom the Software is</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * furnished to do so, subject to the following conditions:</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * The above copyright notice and this permission notice shall be included in</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * all copies or substantial portions of the Software.</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> * SOFTWARE.</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">function_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RandomCompat_intval'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     * Cast to an integer if we can, safely.</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     * </token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     * If you pass it a float in the range (~PHP_INT_MAX, PHP_INT_MAX)</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * (non-inclusive), it will sanely cast it to an int. If you it's equal to</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * ~PHP_INT_MAX or PHP_INT_MAX, we let it fail as not an integer. Floats </token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     * lose precision, so the &lt;= and =&gt; operators might accidentally let a float</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * through.</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     * </token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     * @param int|float $number    The number we want to convert to an int</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     * @param boolean   $fail_open Set to true to not throw an exception</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * </token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     * @return int (or float if $fail_open)</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     * @throws TypeError</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">RandomCompat_intval</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fail_open</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_numeric</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="52"/>
  <line no="53">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">is_float</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">            </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_TILDE">~</token>
    <token name="T_STRING">PHP_INT_MAX</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">            </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_INT_MAX</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="62"/>
  <line no="63">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fail_open</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="66"/>
  <line no="67">
    <token name="T_WHITESPACE">        </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TypeError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Expected an integer.'</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="71">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="72"/>
</source>
