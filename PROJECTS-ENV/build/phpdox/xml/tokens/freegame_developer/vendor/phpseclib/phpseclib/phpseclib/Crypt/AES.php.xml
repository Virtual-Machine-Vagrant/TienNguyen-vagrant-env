<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/web/example/src/freegame_developer/vendor/phpseclib/phpseclib/phpseclib/Crypt" file="AES.php" realpath="/home/web/example/src/freegame_developer/vendor/phpseclib/phpseclib/phpseclib/Crypt/AES.php" size="3701" time="2016-10-04T00:57:04+00:00" unixtime="1475542624" sha1="bf5aa2e421da058e73421065aa5e6c706f12e5c2" relative="freegame_developer/vendor/phpseclib/phpseclib/phpseclib/Crypt/AES.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * Pure-PHP implementation of AES.</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * Uses mcrypt, if available/possible, and an internal implementation, otherwise.</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * PHP version 5</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * NOTE: Since AES.php is (for compatibility and phpseclib-historical reasons) virtually</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * just a wrapper to Rijndael.php you may consider using Rijndael.php instead of</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * to save one include_once().</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * If {@link self::setKeyLength() setKeyLength()} isn't called, it'll be calculated from</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * {@link self::setKey() setKey()}.  ie. if the key is 128-bits, the key length will be 128-bits.  If it's 136-bits</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * it'll be null-padded to 192-bits and 192 bits will be the key length until {@link self::setKey() setKey()}</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * is called, again, at which point, it'll be recalculated.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * Since \phpseclib\Crypt\AES extends \phpseclib\Crypt\Rijndael, some functions are available to be called that, in the context of AES, don't</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * make a whole lot of sense.  {@link self::setBlockLength() setBlockLength()}, for instance.  Calling that function,</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> * however possible, won't do anything (AES has a fixed block length whereas Rijndael has a variable one).</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * Here's a short example of how to use this library:</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * &lt;code&gt;</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * &lt;?php</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> *    include 'vendor/autoload.php';</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT"> *    $aes = new \phpseclib\Crypt\AES();</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> *    $aes-&gt;setKey('abcdefghijklmnop');</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT"> *    $size = 10 * 1024;</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT"> *    $plaintext = '';</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT"> *    for ($i = 0; $i &lt; $size; $i++) {</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT"> *        $plaintext.= 'a';</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT"> *    }</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT"> *    echo $aes-&gt;decrypt($aes-&gt;encrypt($plaintext));</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT"> * ?&gt;</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT"> * &lt;/code&gt;</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT"> * @category  Crypt</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT"> * @package   AES</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT"> * @author    Jim Wigginton &lt;terrafrost@php.net&gt;</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT"> * @copyright 2008 Jim Wigginton</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT"> * @license   http://www.opensource.org/licenses/mit-license.html  MIT License</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT"> * @link      http://phpseclib.sourceforge.net</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="49"/>
  <line no="50">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">phpseclib</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Crypt</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51"/>
  <line no="52">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT"> * Pure-PHP implementation of AES.</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT"> * @package AES</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT"> * @author  Jim Wigginton &lt;terrafrost@php.net&gt;</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT"> * @access  public</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="59">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AES</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Rijndael</token>
  </line>
  <line no="60">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * Dummy function</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     * Since \phpseclib\Crypt\AES extends \phpseclib\Crypt\Rijndael, this function is, technically, available, but it doesn't do anything.</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     * @see \phpseclib\Crypt\Rijndael::setBlockLength()</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * @access public</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     * @param int $length</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setBlockLength</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="74"/>
  <line no="75">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * Sets the key length</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">     * Valid key lengths are 128, 192, and 256.  If the length is less than 128, it will be rounded up to</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     * 128.  If the length is greater than 128 and invalid, it will be rounded down to the closest valid amount.</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * @see \phpseclib\Crypt\Rijndael:setKeyLength()</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * @access public</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     * @param int $length</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setKeyLength</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">        </token>
    <token name="T_SWITCH">switch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">160</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">192</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">                </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">224</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">256</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">setKeyLength</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="96"/>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT">     * Sets the key.</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">     * Rijndael supports five different key lengths, AES only supports three.</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     * @see \phpseclib\Crypt\Rijndael:setKey()</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">     * @see setKeyLength()</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">     * @access public</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">     * @param string $key</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">setKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="110"/>
  <line no="111">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">explicit_key_length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">            </token>
    <token name="T_SWITCH">switch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">key_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">24</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">key_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">24</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">                </token>
    <token name="T_DEFAULT">default</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">key_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">32</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">_setEngine</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="126">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="127"/>
</source>
