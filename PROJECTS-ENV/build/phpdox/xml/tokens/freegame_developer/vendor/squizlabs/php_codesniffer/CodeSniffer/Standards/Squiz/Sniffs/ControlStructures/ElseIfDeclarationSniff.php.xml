<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/ControlStructures" file="ElseIfDeclarationSniff.php" realpath="/home/web/example/src/freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/ControlStructures/ElseIfDeclarationSniff.php" size="2048" time="2016-01-19T23:39:10+00:00" unixtime="1453246750" sha1="eec8cc7947bb1348848c46f6d4b893f0a5625570" relative="freegame_developer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/ControlStructures/ElseIfDeclarationSniff.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff.</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * PHP version 5</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * @category  PHP</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * @package   PHP_CodeSniffer</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * @author    Greg Sherwood &lt;gsherwood@squiz.net&gt;</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * @author    Marc McIntyre &lt;mmcintyre@squiz.net&gt;</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * @copyright 2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * @link      http://pear.php.net/package/PHP_CodeSniffer</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="15"/>
  <line no="16">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * Verifies that there are not elseif statements. The else and the if should</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * be separated by a space.</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * @category  PHP</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * @package   PHP_CodeSniffer</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * @author    Greg Sherwood &lt;gsherwood@squiz.net&gt;</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * @author    Marc McIntyre &lt;mmcintyre@squiz.net&gt;</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> * @copyright 2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT"> * @version   Release: @package_version@</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT"> * @link      http://pear.php.net/package/PHP_CodeSniffer</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="31">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer_Sniff</token>
  </line>
  <line no="32">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="33"/>
  <line no="34"/>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * Returns an array of tokens this test wants to listen for.</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">register</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">T_ELSEIF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43"/>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end register()</token>
  </line>
  <line no="45"/>
  <line no="46"/>
  <line no="47">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     * Processes this test, when one of its tokens is encountered.</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @param PHP_CodeSniffer_File $phpcsFile The file being scanned.</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @param int                  $stackPtr  The position of the current token in the</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     *                                        stack passed in $tokens.</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">process</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_CodeSniffer_File</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Usage of ELSEIF not allowed; use ELSE IF instead'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$fix</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addFixableError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$error</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'NotAllowed'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">replaceToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$stackPtr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'else if'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="63"/>
  <line no="64">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end process()</token>
  </line>
  <line no="65"/>
  <line no="66"/>
  <line no="67">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_COMMENT">//end class</token>
  </line>
  <line no="68"/>
</source>
