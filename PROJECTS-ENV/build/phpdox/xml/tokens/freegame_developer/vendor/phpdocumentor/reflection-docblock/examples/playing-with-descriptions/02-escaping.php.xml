<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/examples/playing-with-descriptions" file="02-escaping.php" realpath="/home/web/example/src/freegame_developer/vendor/phpdocumentor/reflection-docblock/examples/playing-with-descriptions/02-escaping.php" size="1737" time="2016-09-30T07:12:33+00:00" unixtime="1475219553" sha1="3da4edfe634c8e3134d680acf7190f0fc456c3eb" relative="freegame_developer/vendor/phpdocumentor/reflection-docblock/examples/playing-with-descriptions/02-escaping.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_REQUIRE_ONCE">require_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_DIR">__DIR__</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/../../vendor/autoload.php'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">phpDocumentor</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Reflection</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">DocBlockFactory</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_VARIABLE">$docComment</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;DOCCOMMENT</token>
  </line>
  <line no="8">
    <token name="T_ENCAPSED_AND_WHITESPACE">/**</token>
  </line>
  <line no="9">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * This is an example of a summary.</token>
  </line>
  <line no="10">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="11">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * You can escape the @-sign by surrounding it with braces, for example: {@}. And escape a closing brace within an</token>
  </line>
  <line no="12">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * inline tag by adding an opening brace in front of it like this: {}.</token>
  </line>
  <line no="13">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="14">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * Here are example texts where you can see how they could be used in a real life situation:</token>
  </line>
  <line no="15">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="16">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *     This is a text with an {@internal inline tag where a closing brace ({}) is shown}.</token>
  </line>
  <line no="17">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *     Or an {@internal inline tag with a literal {{@}link{} in it}.</token>
  </line>
  <line no="18">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="19">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * Do note that an {@internal inline tag that has an opening brace ({) does not break out}.</token>
  </line>
  <line no="20">
    <token name="T_ENCAPSED_AND_WHITESPACE"> */</token>
  </line>
  <line no="21">
    <token name="T_END_HEREDOC">DOCCOMMENT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_VARIABLE">$factory</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DocBlockFactory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">createInstance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24">
    <token name="T_VARIABLE">$docblock</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$docComment</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_COMMENT">// Escaping is automatic so this happens in the DescriptionFactory.</token>
  </line>
  <line no="27">
    <token name="T_VARIABLE">$description</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$docblock</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDescription</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_COMMENT">// This is the rendition that we will receive of the Description.</token>
  </line>
  <line no="30">
    <token name="T_VARIABLE">$receivedDocComment</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;DOCCOMMENT</token>
  </line>
  <line no="31">
    <token name="T_ENCAPSED_AND_WHITESPACE">/**</token>
  </line>
  <line no="32">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * This is an example of a summary.</token>
  </line>
  <line no="33">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="34">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * You can escape the @-sign by surrounding it with braces, for example: {@}. And escape a closing brace within an</token>
  </line>
  <line no="35">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * inline tag by adding an opening brace in front of it like this: {}.</token>
  </line>
  <line no="36">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="37">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * Here are example texts where you can see how they could be used in a real life situation:</token>
  </line>
  <line no="38">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="39">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *     This is a text with an {@internal inline tag where a closing brace ({}) is shown}.</token>
  </line>
  <line no="40">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *     Or an {@internal inline tag with a literal {{@}link{} in it}.</token>
  </line>
  <line no="41">
    <token name="T_ENCAPSED_AND_WHITESPACE"> *</token>
  </line>
  <line no="42">
    <token name="T_ENCAPSED_AND_WHITESPACE"> * Do note that an {@internal inline tag that has an opening brace ({) does not break out}.</token>
  </line>
  <line no="43">
    <token name="T_ENCAPSED_AND_WHITESPACE"> */</token>
  </line>
  <line no="44">
    <token name="T_END_HEREDOC">DOCCOMMENT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_COMMENT">// Render it using the default PassthroughFormatter</token>
  </line>
  <line no="47">
    <token name="T_VARIABLE">$foundDescription</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$description</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">render</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48"/>
</source>
